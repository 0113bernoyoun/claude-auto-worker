{"numFailedTestSuites":5,"numFailedTests":34,"numPassedTestSuites":2,"numPassedTests":11,"numPendingTestSuites":0,"numPendingTests":0,"numRuntimeErrorTestSuites":0,"numTodoTests":0,"numTotalTestSuites":7,"numTotalTests":45,"openHandles":[],"snapshot":{"added":0,"didUpdate":false,"failure":false,"filesAdded":0,"filesRemoved":0,"filesRemovedList":[],"filesUnmatched":0,"filesUpdated":0,"matched":0,"total":0,"unchecked":0,"uncheckedKeysByFile":[],"unmatched":0,"updated":0},"startTime":1755591225365,"success":false,"testResults":[{"assertionResults":[{"ancestorTitles":["CLI Main Entry Point","CLI 실행 환경"],"duration":3,"failureDetails":[],"failureMessages":[],"fullName":"CLI Main Entry Point CLI 실행 환경 process.argv가 CLI 실행을 위한 형태여야 함","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"process.argv가 CLI 실행을 위한 형태여야 함"},{"ancestorTitles":["CLI Main Entry Point","CLI 실행 환경"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"CLI Main Entry Point CLI 실행 환경 환경변수가 적절히 설정되어야 함","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"status":"passed","title":"환경변수가 적절히 설정되어야 함"},{"ancestorTitles":["CLI Main Entry Point","CLI 모듈 로딩"],"duration":5,"failureDetails":[],"failureMessages":[],"fullName":"CLI Main Entry Point CLI 모듈 로딩 CLI 모듈이 성공적으로 로드되어야 함","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"CLI 모듈이 성공적으로 로드되어야 함"},{"ancestorTitles":["CLI Main Entry Point","CLI 부트스트랩"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"CLI Main Entry Point CLI 부트스트랩 bootstrap 함수가 정의되어야 함","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"bootstrap 함수가 정의되어야 함"},{"ancestorTitles":["CLI Main Entry Point","CLI 부트스트랩"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"CLI Main Entry Point CLI 부트스트랩 bootstrap 함수가 함수여야 함","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"bootstrap 함수가 함수여야 함"}],"endTime":1755591228670,"message":"","name":"/Users/bernocrest/Desktop/dev/projects/claude-auto-worker/tests/unit/cli/main.spec.ts","startTime":1755591225941,"status":"passed","summary":""},{"assertionResults":[{"ancestorTitles":["StatusCommand","상태 확인"],"duration":8,"failureDetails":[{}],"failureMessages":["TypeError: command.run is not a function\n    at Object.<anonymous> (/Users/bernocrest/Desktop/dev/projects/claude-auto-worker/tests/unit/cli/status.command.spec.ts:20:23)\n    at Promise.then.completed (/Users/bernocrest/Desktop/dev/projects/claude-auto-worker/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/Users/bernocrest/Desktop/dev/projects/claude-auto-worker/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/Users/bernocrest/Desktop/dev/projects/claude-auto-worker/node_modules/jest-circus/build/run.js:316:40)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at _runTest (/Users/bernocrest/Desktop/dev/projects/claude-auto-worker/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/Users/bernocrest/Desktop/dev/projects/claude-auto-worker/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/Users/bernocrest/Desktop/dev/projects/claude-auto-worker/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/Users/bernocrest/Desktop/dev/projects/claude-auto-worker/node_modules/jest-circus/build/run.js:121:9)\n    at run (/Users/bernocrest/Desktop/dev/projects/claude-auto-worker/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/Users/bernocrest/Desktop/dev/projects/claude-auto-worker/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/Users/bernocrest/Desktop/dev/projects/claude-auto-worker/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/Users/bernocrest/Desktop/dev/projects/claude-auto-worker/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/Users/bernocrest/Desktop/dev/projects/claude-auto-worker/node_modules/jest-runner/build/runTest.js:444:34)\n    at Object.worker (/Users/bernocrest/Desktop/dev/projects/claude-auto-worker/node_modules/jest-runner/build/testWorker.js:106:12)"],"fullName":"StatusCommand 상태 확인 상태를 표시할 때 에러가 발생하지 않아야 함","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"상태를 표시할 때 에러가 발생하지 않아야 함"},{"ancestorTitles":["StatusCommand","상태 확인"],"duration":1,"failureDetails":[{}],"failureMessages":["TypeError: command.run is not a function\n    at Object.<anonymous> (/Users/bernocrest/Desktop/dev/projects/claude-auto-worker/tests/unit/cli/status.command.spec.ts:31:23)\n    at Promise.then.completed (/Users/bernocrest/Desktop/dev/projects/claude-auto-worker/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/Users/bernocrest/Desktop/dev/projects/claude-auto-worker/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/Users/bernocrest/Desktop/dev/projects/claude-auto-worker/node_modules/jest-circus/build/run.js:316:40)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at _runTest (/Users/bernocrest/Desktop/dev/projects/claude-auto-worker/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/Users/bernocrest/Desktop/dev/projects/claude-auto-worker/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/Users/bernocrest/Desktop/dev/projects/claude-auto-worker/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/Users/bernocrest/Desktop/dev/projects/claude-auto-worker/node_modules/jest-circus/build/run.js:121:9)\n    at run (/Users/bernocrest/Desktop/dev/projects/claude-auto-worker/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/Users/bernocrest/Desktop/dev/projects/claude-auto-worker/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/Users/bernocrest/Desktop/dev/projects/claude-auto-worker/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/Users/bernocrest/Desktop/dev/projects/claude-auto-worker/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/Users/bernocrest/Desktop/dev/projects/claude-auto-worker/node_modules/jest-runner/build/runTest.js:444:34)\n    at Object.worker (/Users/bernocrest/Desktop/dev/projects/claude-auto-worker/node_modules/jest-runner/build/testWorker.js:106:12)"],"fullName":"StatusCommand 상태 확인 상태 메시지에 적절한 정보가 포함되어야 함","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"상태 메시지에 적절한 정보가 포함되어야 함"},{"ancestorTitles":["StatusCommand","상세 상태"],"duration":1,"failureDetails":[{}],"failureMessages":["TypeError: command.run is not a function\n    at Object.<anonymous> (/Users/bernocrest/Desktop/dev/projects/claude-auto-worker/tests/unit/cli/status.command.spec.ts:45:23)\n    at Promise.then.completed (/Users/bernocrest/Desktop/dev/projects/claude-auto-worker/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/Users/bernocrest/Desktop/dev/projects/claude-auto-worker/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/Users/bernocrest/Desktop/dev/projects/claude-auto-worker/node_modules/jest-circus/build/run.js:316:40)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at _runTest (/Users/bernocrest/Desktop/dev/projects/claude-auto-worker/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/Users/bernocrest/Desktop/dev/projects/claude-auto-worker/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/Users/bernocrest/Desktop/dev/projects/claude-auto-worker/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/Users/bernocrest/Desktop/dev/projects/claude-auto-worker/node_modules/jest-circus/build/run.js:121:9)\n    at run (/Users/bernocrest/Desktop/dev/projects/claude-auto-worker/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/Users/bernocrest/Desktop/dev/projects/claude-auto-worker/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/Users/bernocrest/Desktop/dev/projects/claude-auto-worker/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/Users/bernocrest/Desktop/dev/projects/claude-auto-worker/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/Users/bernocrest/Desktop/dev/projects/claude-auto-worker/node_modules/jest-runner/build/runTest.js:444:34)\n    at Object.worker (/Users/bernocrest/Desktop/dev/projects/claude-auto-worker/node_modules/jest-runner/build/testWorker.js:106:12)"],"fullName":"StatusCommand 상세 상태 상세 옵션이 있을 때 더 많은 정보를 표시해야 함","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"상세 옵션이 있을 때 더 많은 정보를 표시해야 함"},{"ancestorTitles":["StatusCommand","에러 처리"],"duration":2,"failureDetails":[{"matcherResult":{"actual":false,"expected":true,"message":"\u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32mtrue\u001b[39m\nReceived: \u001b[31mfalse\u001b[39m","name":"toBe","pass":false}}],"failureMessages":["Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32mtrue\u001b[39m\nReceived: \u001b[31mfalse\u001b[39m\n    at Object.<anonymous> (/Users/bernocrest/Desktop/dev/projects/claude-auto-worker/tests/unit/cli/status.command.spec.ts:61:53)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)"],"fullName":"StatusCommand 에러 처리 상태 확인 중 에러가 발생해도 적절히 처리되어야 함","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"상태 확인 중 에러가 발생해도 적절히 처리되어야 함"}],"endTime":1755591228916,"message":"\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1mStatusCommand › 상태 확인 › 상태를 표시할 때 에러가 발생하지 않아야 함\u001b[39m\u001b[22m\n\n    TypeError: command.run is not a function\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 18 |\u001b[39m       \u001b[22m\n\u001b[2m     \u001b[90m 19 |\u001b[39m       \u001b[36mtry\u001b[39m {\u001b[22m\n\u001b[2m    \u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 20 |\u001b[39m         \u001b[36mawait\u001b[39m command\u001b[33m.\u001b[39mrun([]\u001b[33m,\u001b[39m {})\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m    |\u001b[39m                       \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 21 |\u001b[39m         expect(outputs\u001b[33m.\u001b[39msome(o \u001b[33m=>\u001b[39m o\u001b[33m.\u001b[39mtype \u001b[33m===\u001b[39m \u001b[32m'log'\u001b[39m))\u001b[33m.\u001b[39mtoBe(\u001b[36mtrue\u001b[39m)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 22 |\u001b[39m       } \u001b[36mfinally\u001b[39m {\u001b[22m\n\u001b[2m     \u001b[90m 23 |\u001b[39m         restore()\u001b[33m;\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.<anonymous> (\u001b[22m\u001b[2m\u001b[0m\u001b[36mtests/unit/cli/status.command.spec.ts\u001b[39m\u001b[0m\u001b[2m:20:23)\u001b[22m\u001b[2m\u001b[22m\n\n\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1mStatusCommand › 상태 확인 › 상태 메시지에 적절한 정보가 포함되어야 함\u001b[39m\u001b[22m\n\n    TypeError: command.run is not a function\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 29 |\u001b[39m       \u001b[22m\n\u001b[2m     \u001b[90m 30 |\u001b[39m       \u001b[36mtry\u001b[39m {\u001b[22m\n\u001b[2m    \u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 31 |\u001b[39m         \u001b[36mawait\u001b[39m command\u001b[33m.\u001b[39mrun([]\u001b[33m,\u001b[39m {})\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m    |\u001b[39m                       \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 32 |\u001b[39m         \u001b[36mconst\u001b[39m statusOutput \u001b[33m=\u001b[39m outputs\u001b[33m.\u001b[39mfind(o \u001b[33m=>\u001b[39m o\u001b[33m.\u001b[39mtype \u001b[33m===\u001b[39m \u001b[32m'log'\u001b[39m)\u001b[33m?\u001b[39m\u001b[33m.\u001b[39mmessage \u001b[33m||\u001b[39m \u001b[32m''\u001b[39m\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 33 |\u001b[39m         expect(statusOutput)\u001b[33m.\u001b[39mtoContain(\u001b[32m'Status'\u001b[39m)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 34 |\u001b[39m       } \u001b[36mfinally\u001b[39m {\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.<anonymous> (\u001b[22m\u001b[2m\u001b[0m\u001b[36mtests/unit/cli/status.command.spec.ts\u001b[39m\u001b[0m\u001b[2m:31:23)\u001b[22m\u001b[2m\u001b[22m\n\n\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1mStatusCommand › 상세 상태 › 상세 옵션이 있을 때 더 많은 정보를 표시해야 함\u001b[39m\u001b[22m\n\n    TypeError: command.run is not a function\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 43 |\u001b[39m       \u001b[22m\n\u001b[2m     \u001b[90m 44 |\u001b[39m       \u001b[36mtry\u001b[39m {\u001b[22m\n\u001b[2m    \u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 45 |\u001b[39m         \u001b[36mawait\u001b[39m command\u001b[33m.\u001b[39mrun([]\u001b[33m,\u001b[39m { detailed\u001b[33m:\u001b[39m \u001b[36mtrue\u001b[39m })\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m    |\u001b[39m                       \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 46 |\u001b[39m         expect(outputs\u001b[33m.\u001b[39msome(o \u001b[33m=>\u001b[39m o\u001b[33m.\u001b[39mtype \u001b[33m===\u001b[39m \u001b[32m'log'\u001b[39m))\u001b[33m.\u001b[39mtoBe(\u001b[36mtrue\u001b[39m)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 47 |\u001b[39m       } \u001b[36mfinally\u001b[39m {\u001b[22m\n\u001b[2m     \u001b[90m 48 |\u001b[39m         restore()\u001b[33m;\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.<anonymous> (\u001b[22m\u001b[2m\u001b[0m\u001b[36mtests/unit/cli/status.command.spec.ts\u001b[39m\u001b[0m\u001b[2m:45:23)\u001b[22m\u001b[2m\u001b[22m\n\n\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1mStatusCommand › 에러 처리 › 상태 확인 중 에러가 발생해도 적절히 처리되어야 함\u001b[39m\u001b[22m\n\n    \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\n    Expected: \u001b[32mtrue\u001b[39m\n    Received: \u001b[31mfalse\u001b[39m\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 59 |\u001b[39m           command\u001b[33m.\u001b[39mrun([]\u001b[33m,\u001b[39m {})\u001b[22m\n\u001b[2m     \u001b[90m 60 |\u001b[39m         )\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m    \u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 61 |\u001b[39m         expect(outputs\u001b[33m.\u001b[39msome(o \u001b[33m=>\u001b[39m o\u001b[33m.\u001b[39mtype \u001b[33m===\u001b[39m \u001b[32m'log'\u001b[39m))\u001b[33m.\u001b[39mtoBe(\u001b[36mtrue\u001b[39m)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m    |\u001b[39m                                                     \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 62 |\u001b[39m       } \u001b[36mfinally\u001b[39m {\u001b[22m\n\u001b[2m     \u001b[90m 63 |\u001b[39m         restore()\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 64 |\u001b[39m       }\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.<anonymous> (\u001b[22m\u001b[2m\u001b[0m\u001b[36mtests/unit/cli/status.command.spec.ts\u001b[39m\u001b[0m\u001b[2m:61:53)\u001b[22m\u001b[2m\u001b[22m\n","name":"/Users/bernocrest/Desktop/dev/projects/claude-auto-worker/tests/unit/cli/status.command.spec.ts","startTime":1755591225948,"status":"failed","summary":""},{"assertionResults":[{"ancestorTitles":["LogsCommand","로그 표시"],"duration":8,"failureDetails":[{}],"failureMessages":["TypeError: command.run is not a function\n    at Object.<anonymous> (/Users/bernocrest/Desktop/dev/projects/claude-auto-worker/tests/unit/cli/logs.command.spec.ts:20:23)\n    at Promise.then.completed (/Users/bernocrest/Desktop/dev/projects/claude-auto-worker/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/Users/bernocrest/Desktop/dev/projects/claude-auto-worker/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/Users/bernocrest/Desktop/dev/projects/claude-auto-worker/node_modules/jest-circus/build/run.js:316:40)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at _runTest (/Users/bernocrest/Desktop/dev/projects/claude-auto-worker/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/Users/bernocrest/Desktop/dev/projects/claude-auto-worker/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/Users/bernocrest/Desktop/dev/projects/claude-auto-worker/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/Users/bernocrest/Desktop/dev/projects/claude-auto-worker/node_modules/jest-circus/build/run.js:121:9)\n    at run (/Users/bernocrest/Desktop/dev/projects/claude-auto-worker/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/Users/bernocrest/Desktop/dev/projects/claude-auto-worker/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/Users/bernocrest/Desktop/dev/projects/claude-auto-worker/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/Users/bernocrest/Desktop/dev/projects/claude-auto-worker/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/Users/bernocrest/Desktop/dev/projects/claude-auto-worker/node_modules/jest-runner/build/runTest.js:444:34)\n    at Object.worker (/Users/bernocrest/Desktop/dev/projects/claude-auto-worker/node_modules/jest-runner/build/testWorker.js:106:12)"],"fullName":"LogsCommand 로그 표시 로그를 표시할 때 에러가 발생하지 않아야 함","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"로그를 표시할 때 에러가 발생하지 않아야 함"},{"ancestorTitles":["LogsCommand","로그 표시"],"duration":2,"failureDetails":[{}],"failureMessages":["TypeError: command.run is not a function\n    at Object.<anonymous> (/Users/bernocrest/Desktop/dev/projects/claude-auto-worker/tests/unit/cli/logs.command.spec.ts:31:23)\n    at Promise.then.completed (/Users/bernocrest/Desktop/dev/projects/claude-auto-worker/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/Users/bernocrest/Desktop/dev/projects/claude-auto-worker/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/Users/bernocrest/Desktop/dev/projects/claude-auto-worker/node_modules/jest-circus/build/run.js:316:40)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at _runTest (/Users/bernocrest/Desktop/dev/projects/claude-auto-worker/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/Users/bernocrest/Desktop/dev/projects/claude-auto-worker/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/Users/bernocrest/Desktop/dev/projects/claude-auto-worker/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/Users/bernocrest/Desktop/dev/projects/claude-auto-worker/node_modules/jest-circus/build/run.js:121:9)\n    at run (/Users/bernocrest/Desktop/dev/projects/claude-auto-worker/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/Users/bernocrest/Desktop/dev/projects/claude-auto-worker/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/Users/bernocrest/Desktop/dev/projects/claude-auto-worker/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/Users/bernocrest/Desktop/dev/projects/claude-auto-worker/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/Users/bernocrest/Desktop/dev/projects/claude-auto-worker/node_modules/jest-runner/build/runTest.js:444:34)\n    at Object.worker (/Users/bernocrest/Desktop/dev/projects/claude-auto-worker/node_modules/jest-runner/build/testWorker.js:106:12)"],"fullName":"LogsCommand 로그 표시 로그 메시지에 적절한 정보가 포함되어야 함","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"로그 메시지에 적절한 정보가 포함되어야 함"},{"ancestorTitles":["LogsCommand","로그 필터링"],"duration":1,"failureDetails":[{}],"failureMessages":["TypeError: command.run is not a function\n    at Object.<anonymous> (/Users/bernocrest/Desktop/dev/projects/claude-auto-worker/tests/unit/cli/logs.command.spec.ts:45:23)\n    at Promise.then.completed (/Users/bernocrest/Desktop/dev/projects/claude-auto-worker/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/Users/bernocrest/Desktop/dev/projects/claude-auto-worker/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/Users/bernocrest/Desktop/dev/projects/claude-auto-worker/node_modules/jest-circus/build/run.js:316:40)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at _runTest (/Users/bernocrest/Desktop/dev/projects/claude-auto-worker/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/Users/bernocrest/Desktop/dev/projects/claude-auto-worker/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/Users/bernocrest/Desktop/dev/projects/claude-auto-worker/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/Users/bernocrest/Desktop/dev/projects/claude-auto-worker/node_modules/jest-circus/build/run.js:121:9)\n    at run (/Users/bernocrest/Desktop/dev/projects/claude-auto-worker/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/Users/bernocrest/Desktop/dev/projects/claude-auto-worker/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/Users/bernocrest/Desktop/dev/projects/claude-auto-worker/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/Users/bernocrest/Desktop/dev/projects/claude-auto-worker/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/Users/bernocrest/Desktop/dev/projects/claude-auto-worker/node_modules/jest-runner/build/runTest.js:444:34)\n    at Object.worker (/Users/bernocrest/Desktop/dev/projects/claude-auto-worker/node_modules/jest-runner/build/testWorker.js:106:12)"],"fullName":"LogsCommand 로그 필터링 레벨별 로그 필터링이 작동해야 함","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"레벨별 로그 필터링이 작동해야 함"},{"ancestorTitles":["LogsCommand","로그 필터링"],"duration":1,"failureDetails":[{}],"failureMessages":["TypeError: command.run is not a function\n    at Object.<anonymous> (/Users/bernocrest/Desktop/dev/projects/claude-auto-worker/tests/unit/cli/logs.command.spec.ts:56:23)\n    at Promise.then.completed (/Users/bernocrest/Desktop/dev/projects/claude-auto-worker/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/Users/bernocrest/Desktop/dev/projects/claude-auto-worker/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/Users/bernocrest/Desktop/dev/projects/claude-auto-worker/node_modules/jest-circus/build/run.js:316:40)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at _runTest (/Users/bernocrest/Desktop/dev/projects/claude-auto-worker/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/Users/bernocrest/Desktop/dev/projects/claude-auto-worker/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/Users/bernocrest/Desktop/dev/projects/claude-auto-worker/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/Users/bernocrest/Desktop/dev/projects/claude-auto-worker/node_modules/jest-circus/build/run.js:121:9)\n    at run (/Users/bernocrest/Desktop/dev/projects/claude-auto-worker/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/Users/bernocrest/Desktop/dev/projects/claude-auto-worker/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/Users/bernocrest/Desktop/dev/projects/claude-auto-worker/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/Users/bernocrest/Desktop/dev/projects/claude-auto-worker/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/Users/bernocrest/Desktop/dev/projects/claude-auto-worker/node_modules/jest-runner/build/runTest.js:444:34)\n    at Object.worker (/Users/bernocrest/Desktop/dev/projects/claude-auto-worker/node_modules/jest-runner/build/testWorker.js:106:12)"],"fullName":"LogsCommand 로그 필터링 시간 범위별 로그 필터링이 작동해야 함","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"시간 범위별 로그 필터링이 작동해야 함"},{"ancestorTitles":["LogsCommand","로그 옵션"],"duration":1,"failureDetails":[{}],"failureMessages":["TypeError: command.run is not a function\n    at Object.<anonymous> (/Users/bernocrest/Desktop/dev/projects/claude-auto-worker/tests/unit/cli/logs.command.spec.ts:69:23)\n    at Promise.then.completed (/Users/bernocrest/Desktop/dev/projects/claude-auto-worker/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/Users/bernocrest/Desktop/dev/projects/claude-auto-worker/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/Users/bernocrest/Desktop/dev/projects/claude-auto-worker/node_modules/jest-circus/build/run.js:316:40)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at _runTest (/Users/bernocrest/Desktop/dev/projects/claude-auto-worker/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/Users/bernocrest/Desktop/dev/projects/claude-auto-worker/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/Users/bernocrest/Desktop/dev/projects/claude-auto-worker/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/Users/bernocrest/Desktop/dev/projects/claude-auto-worker/node_modules/jest-circus/build/run.js:121:9)\n    at run (/Users/bernocrest/Desktop/dev/projects/claude-auto-worker/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/Users/bernocrest/Desktop/dev/projects/claude-auto-worker/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/Users/bernocrest/Desktop/dev/projects/claude-auto-worker/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/Users/bernocrest/Desktop/dev/projects/claude-auto-worker/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/Users/bernocrest/Desktop/dev/projects/claude-auto-worker/node_modules/jest-runner/build/runTest.js:444:34)\n    at Object.worker (/Users/bernocrest/Desktop/dev/projects/claude-auto-worker/node_modules/jest-runner/build/testWorker.js:106:12)"],"fullName":"LogsCommand 로그 옵션 tail 옵션이 있을 때 실시간 로그를 표시해야 함","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"tail 옵션이 있을 때 실시간 로그를 표시해야 함"},{"ancestorTitles":["LogsCommand","로그 옵션"],"duration":1,"failureDetails":[{}],"failureMessages":["TypeError: command.run is not a function\n    at Object.<anonymous> (/Users/bernocrest/Desktop/dev/projects/claude-auto-worker/tests/unit/cli/logs.command.spec.ts:80:23)\n    at Promise.then.completed (/Users/bernocrest/Desktop/dev/projects/claude-auto-worker/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/Users/bernocrest/Desktop/dev/projects/claude-auto-worker/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/Users/bernocrest/Desktop/dev/projects/claude-auto-worker/node_modules/jest-circus/build/run.js:316:40)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at _runTest (/Users/bernocrest/Desktop/dev/projects/claude-auto-worker/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/Users/bernocrest/Desktop/dev/projects/claude-auto-worker/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/Users/bernocrest/Desktop/dev/projects/claude-auto-worker/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/Users/bernocrest/Desktop/dev/projects/claude-auto-worker/node_modules/jest-circus/build/run.js:121:9)\n    at run (/Users/bernocrest/Desktop/dev/projects/claude-auto-worker/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/Users/bernocrest/Desktop/dev/projects/claude-auto-worker/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/Users/bernocrest/Desktop/dev/projects/claude-auto-worker/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/Users/bernocrest/Desktop/dev/projects/claude-auto-worker/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/Users/bernocrest/Desktop/dev/projects/claude-auto-worker/node_modules/jest-runner/build/runTest.js:444:34)\n    at Object.worker (/Users/bernocrest/Desktop/dev/projects/claude-auto-worker/node_modules/jest-runner/build/testWorker.js:106:12)"],"fullName":"LogsCommand 로그 옵션 follow 옵션이 있을 때 로그를 계속 따라가야 함","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"follow 옵션이 있을 때 로그를 계속 따라가야 함"},{"ancestorTitles":["LogsCommand","에러 처리"],"duration":2,"failureDetails":[{"matcherResult":{"actual":false,"expected":true,"message":"\u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32mtrue\u001b[39m\nReceived: \u001b[31mfalse\u001b[39m","name":"toBe","pass":false}}],"failureMessages":["Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32mtrue\u001b[39m\nReceived: \u001b[31mfalse\u001b[39m\n    at Object.<anonymous> (/Users/bernocrest/Desktop/dev/projects/claude-auto-worker/tests/unit/cli/logs.command.spec.ts:96:53)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)"],"fullName":"LogsCommand 에러 처리 로그 확인 중 에러가 발생해도 적절히 처리되어야 함","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"로그 확인 중 에러가 발생해도 적절히 처리되어야 함"}],"endTime":1755591228929,"message":"\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1mLogsCommand › 로그 표시 › 로그를 표시할 때 에러가 발생하지 않아야 함\u001b[39m\u001b[22m\n\n    TypeError: command.run is not a function\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 18 |\u001b[39m       \u001b[22m\n\u001b[2m     \u001b[90m 19 |\u001b[39m       \u001b[36mtry\u001b[39m {\u001b[22m\n\u001b[2m    \u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 20 |\u001b[39m         \u001b[36mawait\u001b[39m command\u001b[33m.\u001b[39mrun([]\u001b[33m,\u001b[39m {})\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m    |\u001b[39m                       \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 21 |\u001b[39m         expect(outputs\u001b[33m.\u001b[39msome(o \u001b[33m=>\u001b[39m o\u001b[33m.\u001b[39mtype \u001b[33m===\u001b[39m \u001b[32m'log'\u001b[39m))\u001b[33m.\u001b[39mtoBe(\u001b[36mtrue\u001b[39m)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 22 |\u001b[39m       } \u001b[36mfinally\u001b[39m {\u001b[22m\n\u001b[2m     \u001b[90m 23 |\u001b[39m         restore()\u001b[33m;\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.<anonymous> (\u001b[22m\u001b[2m\u001b[0m\u001b[36mtests/unit/cli/logs.command.spec.ts\u001b[39m\u001b[0m\u001b[2m:20:23)\u001b[22m\u001b[2m\u001b[22m\n\n\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1mLogsCommand › 로그 표시 › 로그 메시지에 적절한 정보가 포함되어야 함\u001b[39m\u001b[22m\n\n    TypeError: command.run is not a function\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 29 |\u001b[39m       \u001b[22m\n\u001b[2m     \u001b[90m 30 |\u001b[39m       \u001b[36mtry\u001b[39m {\u001b[22m\n\u001b[2m    \u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 31 |\u001b[39m         \u001b[36mawait\u001b[39m command\u001b[33m.\u001b[39mrun([]\u001b[33m,\u001b[39m {})\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m    |\u001b[39m                       \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 32 |\u001b[39m         \u001b[36mconst\u001b[39m logsOutput \u001b[33m=\u001b[39m outputs\u001b[33m.\u001b[39mfind(o \u001b[33m=>\u001b[39m o\u001b[33m.\u001b[39mtype \u001b[33m===\u001b[39m \u001b[32m'log'\u001b[39m)\u001b[33m?\u001b[39m\u001b[33m.\u001b[39mmessage \u001b[33m||\u001b[39m \u001b[32m''\u001b[39m\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 33 |\u001b[39m         expect(logsOutput)\u001b[33m.\u001b[39mtoContain(\u001b[32m'Logs'\u001b[39m)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 34 |\u001b[39m       } \u001b[36mfinally\u001b[39m {\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.<anonymous> (\u001b[22m\u001b[2m\u001b[0m\u001b[36mtests/unit/cli/logs.command.spec.ts\u001b[39m\u001b[0m\u001b[2m:31:23)\u001b[22m\u001b[2m\u001b[22m\n\n\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1mLogsCommand › 로그 필터링 › 레벨별 로그 필터링이 작동해야 함\u001b[39m\u001b[22m\n\n    TypeError: command.run is not a function\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 43 |\u001b[39m       \u001b[22m\n\u001b[2m     \u001b[90m 44 |\u001b[39m       \u001b[36mtry\u001b[39m {\u001b[22m\n\u001b[2m    \u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 45 |\u001b[39m         \u001b[36mawait\u001b[39m command\u001b[33m.\u001b[39mrun([]\u001b[33m,\u001b[39m { level\u001b[33m:\u001b[39m \u001b[32m'error'\u001b[39m })\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m    |\u001b[39m                       \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 46 |\u001b[39m         expect(outputs\u001b[33m.\u001b[39msome(o \u001b[33m=>\u001b[39m o\u001b[33m.\u001b[39mtype \u001b[33m===\u001b[39m \u001b[32m'log'\u001b[39m))\u001b[33m.\u001b[39mtoBe(\u001b[36mtrue\u001b[39m)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 47 |\u001b[39m       } \u001b[36mfinally\u001b[39m {\u001b[22m\n\u001b[2m     \u001b[90m 48 |\u001b[39m         restore()\u001b[33m;\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.<anonymous> (\u001b[22m\u001b[2m\u001b[0m\u001b[36mtests/unit/cli/logs.command.spec.ts\u001b[39m\u001b[0m\u001b[2m:45:23)\u001b[22m\u001b[2m\u001b[22m\n\n\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1mLogsCommand › 로그 필터링 › 시간 범위별 로그 필터링이 작동해야 함\u001b[39m\u001b[22m\n\n    TypeError: command.run is not a function\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 54 |\u001b[39m       \u001b[22m\n\u001b[2m     \u001b[90m 55 |\u001b[39m       \u001b[36mtry\u001b[39m {\u001b[22m\n\u001b[2m    \u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 56 |\u001b[39m         \u001b[36mawait\u001b[39m command\u001b[33m.\u001b[39mrun([]\u001b[33m,\u001b[39m { since\u001b[33m:\u001b[39m \u001b[32m'1h'\u001b[39m })\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m    |\u001b[39m                       \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 57 |\u001b[39m         expect(outputs\u001b[33m.\u001b[39msome(o \u001b[33m=>\u001b[39m o\u001b[33m.\u001b[39mtype \u001b[33m===\u001b[39m \u001b[32m'log'\u001b[39m))\u001b[33m.\u001b[39mtoBe(\u001b[36mtrue\u001b[39m)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 58 |\u001b[39m       } \u001b[36mfinally\u001b[39m {\u001b[22m\n\u001b[2m     \u001b[90m 59 |\u001b[39m         restore()\u001b[33m;\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.<anonymous> (\u001b[22m\u001b[2m\u001b[0m\u001b[36mtests/unit/cli/logs.command.spec.ts\u001b[39m\u001b[0m\u001b[2m:56:23)\u001b[22m\u001b[2m\u001b[22m\n\n\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1mLogsCommand › 로그 옵션 › tail 옵션이 있을 때 실시간 로그를 표시해야 함\u001b[39m\u001b[22m\n\n    TypeError: command.run is not a function\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 67 |\u001b[39m       \u001b[22m\n\u001b[2m     \u001b[90m 68 |\u001b[39m       \u001b[36mtry\u001b[39m {\u001b[22m\n\u001b[2m    \u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 69 |\u001b[39m         \u001b[36mawait\u001b[39m command\u001b[33m.\u001b[39mrun([]\u001b[33m,\u001b[39m { tail\u001b[33m:\u001b[39m \u001b[36mtrue\u001b[39m })\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m    |\u001b[39m                       \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 70 |\u001b[39m         expect(outputs\u001b[33m.\u001b[39msome(o \u001b[33m=>\u001b[39m o\u001b[33m.\u001b[39mtype \u001b[33m===\u001b[39m \u001b[32m'log'\u001b[39m))\u001b[33m.\u001b[39mtoBe(\u001b[36mtrue\u001b[39m)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 71 |\u001b[39m       } \u001b[36mfinally\u001b[39m {\u001b[22m\n\u001b[2m     \u001b[90m 72 |\u001b[39m         restore()\u001b[33m;\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.<anonymous> (\u001b[22m\u001b[2m\u001b[0m\u001b[36mtests/unit/cli/logs.command.spec.ts\u001b[39m\u001b[0m\u001b[2m:69:23)\u001b[22m\u001b[2m\u001b[22m\n\n\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1mLogsCommand › 로그 옵션 › follow 옵션이 있을 때 로그를 계속 따라가야 함\u001b[39m\u001b[22m\n\n    TypeError: command.run is not a function\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 78 |\u001b[39m       \u001b[22m\n\u001b[2m     \u001b[90m 79 |\u001b[39m       \u001b[36mtry\u001b[39m {\u001b[22m\n\u001b[2m    \u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 80 |\u001b[39m         \u001b[36mawait\u001b[39m command\u001b[33m.\u001b[39mrun([]\u001b[33m,\u001b[39m { follow\u001b[33m:\u001b[39m \u001b[36mtrue\u001b[39m })\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m    |\u001b[39m                       \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 81 |\u001b[39m         expect(outputs\u001b[33m.\u001b[39msome(o \u001b[33m=>\u001b[39m o\u001b[33m.\u001b[39mtype \u001b[33m===\u001b[39m \u001b[32m'log'\u001b[39m))\u001b[33m.\u001b[39mtoBe(\u001b[36mtrue\u001b[39m)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 82 |\u001b[39m       } \u001b[36mfinally\u001b[39m {\u001b[22m\n\u001b[2m     \u001b[90m 83 |\u001b[39m         restore()\u001b[33m;\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.<anonymous> (\u001b[22m\u001b[2m\u001b[0m\u001b[36mtests/unit/cli/logs.command.spec.ts\u001b[39m\u001b[0m\u001b[2m:80:23)\u001b[22m\u001b[2m\u001b[22m\n\n\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1mLogsCommand › 에러 처리 › 로그 확인 중 에러가 발생해도 적절히 처리되어야 함\u001b[39m\u001b[22m\n\n    \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\n    Expected: \u001b[32mtrue\u001b[39m\n    Received: \u001b[31mfalse\u001b[39m\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 94 |\u001b[39m           command\u001b[33m.\u001b[39mrun([]\u001b[33m,\u001b[39m {})\u001b[22m\n\u001b[2m     \u001b[90m 95 |\u001b[39m         )\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m    \u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 96 |\u001b[39m         expect(outputs\u001b[33m.\u001b[39msome(o \u001b[33m=>\u001b[39m o\u001b[33m.\u001b[39mtype \u001b[33m===\u001b[39m \u001b[32m'log'\u001b[39m))\u001b[33m.\u001b[39mtoBe(\u001b[36mtrue\u001b[39m)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m    |\u001b[39m                                                     \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 97 |\u001b[39m       } \u001b[36mfinally\u001b[39m {\u001b[22m\n\u001b[2m     \u001b[90m 98 |\u001b[39m         restore()\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 99 |\u001b[39m       }\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.<anonymous> (\u001b[22m\u001b[2m\u001b[0m\u001b[36mtests/unit/cli/logs.command.spec.ts\u001b[39m\u001b[0m\u001b[2m:96:53)\u001b[22m\u001b[2m\u001b[22m\n","name":"/Users/bernocrest/Desktop/dev/projects/claude-auto-worker/tests/unit/cli/logs.command.spec.ts","startTime":1755591225921,"status":"failed","summary":""},{"assertionResults":[{"ancestorTitles":["HelpCommand","기본 도움말"],"duration":8,"failureDetails":[{}],"failureMessages":["TypeError: command.run is not a function\n    at Object.<anonymous> (/Users/bernocrest/Desktop/dev/projects/claude-auto-worker/tests/unit/cli/help.command.spec.ts:20:23)\n    at Promise.then.completed (/Users/bernocrest/Desktop/dev/projects/claude-auto-worker/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/Users/bernocrest/Desktop/dev/projects/claude-auto-worker/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/Users/bernocrest/Desktop/dev/projects/claude-auto-worker/node_modules/jest-circus/build/run.js:316:40)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at _runTest (/Users/bernocrest/Desktop/dev/projects/claude-auto-worker/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/Users/bernocrest/Desktop/dev/projects/claude-auto-worker/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/Users/bernocrest/Desktop/dev/projects/claude-auto-worker/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/Users/bernocrest/Desktop/dev/projects/claude-auto-worker/node_modules/jest-circus/build/run.js:121:9)\n    at run (/Users/bernocrest/Desktop/dev/projects/claude-auto-worker/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/Users/bernocrest/Desktop/dev/projects/claude-auto-worker/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/Users/bernocrest/Desktop/dev/projects/claude-auto-worker/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/Users/bernocrest/Desktop/dev/projects/claude-auto-worker/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/Users/bernocrest/Desktop/dev/projects/claude-auto-worker/node_modules/jest-runner/build/runTest.js:444:34)\n    at Object.worker (/Users/bernocrest/Desktop/dev/projects/claude-auto-worker/node_modules/jest-runner/build/testWorker.js:106:12)"],"fullName":"HelpCommand 기본 도움말 도움말을 표시할 때 에러가 발생하지 않아야 함","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"도움말을 표시할 때 에러가 발생하지 않아야 함"},{"ancestorTitles":["HelpCommand","기본 도움말"],"duration":1,"failureDetails":[{}],"failureMessages":["TypeError: command.run is not a function\n    at Object.<anonymous> (/Users/bernocrest/Desktop/dev/projects/claude-auto-worker/tests/unit/cli/help.command.spec.ts:31:23)\n    at Promise.then.completed (/Users/bernocrest/Desktop/dev/projects/claude-auto-worker/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/Users/bernocrest/Desktop/dev/projects/claude-auto-worker/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/Users/bernocrest/Desktop/dev/projects/claude-auto-worker/node_modules/jest-circus/build/run.js:316:40)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at _runTest (/Users/bernocrest/Desktop/dev/projects/claude-auto-worker/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/Users/bernocrest/Desktop/dev/projects/claude-auto-worker/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/Users/bernocrest/Desktop/dev/projects/claude-auto-worker/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/Users/bernocrest/Desktop/dev/projects/claude-auto-worker/node_modules/jest-circus/build/run.js:121:9)\n    at run (/Users/bernocrest/Desktop/dev/projects/claude-auto-worker/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/Users/bernocrest/Desktop/dev/projects/claude-auto-worker/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/Users/bernocrest/Desktop/dev/projects/claude-auto-worker/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/Users/bernocrest/Desktop/dev/projects/claude-auto-worker/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/Users/bernocrest/Desktop/dev/projects/claude-auto-worker/node_modules/jest-runner/build/runTest.js:444:34)\n    at Object.worker (/Users/bernocrest/Desktop/dev/projects/claude-auto-worker/node_modules/jest-runner/build/testWorker.js:106:12)"],"fullName":"HelpCommand 기본 도움말 도움말 메시지에 프로젝트 이름이 포함되어야 함","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"도움말 메시지에 프로젝트 이름이 포함되어야 함"},{"ancestorTitles":["HelpCommand","특정 명령어 도움말"],"duration":1,"failureDetails":[{}],"failureMessages":["TypeError: command.run is not a function\n    at Object.<anonymous> (/Users/bernocrest/Desktop/dev/projects/claude-auto-worker/tests/unit/cli/help.command.spec.ts:44:23)\n    at Promise.then.completed (/Users/bernocrest/Desktop/dev/projects/claude-auto-worker/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/Users/bernocrest/Desktop/dev/projects/claude-auto-worker/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/Users/bernocrest/Desktop/dev/projects/claude-auto-worker/node_modules/jest-circus/build/run.js:316:40)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at _runTest (/Users/bernocrest/Desktop/dev/projects/claude-auto-worker/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/Users/bernocrest/Desktop/dev/projects/claude-auto-worker/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/Users/bernocrest/Desktop/dev/projects/claude-auto-worker/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/Users/bernocrest/Desktop/dev/projects/claude-auto-worker/node_modules/jest-circus/build/run.js:121:9)\n    at run (/Users/bernocrest/Desktop/dev/projects/claude-auto-worker/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/Users/bernocrest/Desktop/dev/projects/claude-auto-worker/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/Users/bernocrest/Desktop/dev/projects/claude-auto-worker/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/Users/bernocrest/Desktop/dev/projects/claude-auto-worker/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/Users/bernocrest/Desktop/dev/projects/claude-auto-worker/node_modules/jest-runner/build/runTest.js:444:34)\n    at Object.worker (/Users/bernocrest/Desktop/dev/projects/claude-auto-worker/node_modules/jest-runner/build/testWorker.js:106:12)"],"fullName":"HelpCommand 특정 명령어 도움말 특정 명령어에 대한 도움말을 표시할 수 있어야 함","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"특정 명령어에 대한 도움말을 표시할 수 있어야 함"},{"ancestorTitles":["HelpCommand","특정 명령어 도움말"],"duration":1,"failureDetails":[{}],"failureMessages":["TypeError: command.run is not a function\n    at Object.<anonymous> (/Users/bernocrest/Desktop/dev/projects/claude-auto-worker/tests/unit/cli/help.command.spec.ts:55:23)\n    at Promise.then.completed (/Users/bernocrest/Desktop/dev/projects/claude-auto-worker/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/Users/bernocrest/Desktop/dev/projects/claude-auto-worker/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/Users/bernocrest/Desktop/dev/projects/claude-auto-worker/node_modules/jest-circus/build/run.js:316:40)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at _runTest (/Users/bernocrest/Desktop/dev/projects/claude-auto-worker/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/Users/bernocrest/Desktop/dev/projects/claude-auto-worker/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/Users/bernocrest/Desktop/dev/projects/claude-auto-worker/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/Users/bernocrest/Desktop/dev/projects/claude-auto-worker/node_modules/jest-circus/build/run.js:121:9)\n    at run (/Users/bernocrest/Desktop/dev/projects/claude-auto-worker/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/Users/bernocrest/Desktop/dev/projects/claude-auto-worker/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/Users/bernocrest/Desktop/dev/projects/claude-auto-worker/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/Users/bernocrest/Desktop/dev/projects/claude-auto-worker/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/Users/bernocrest/Desktop/dev/projects/claude-auto-worker/node_modules/jest-runner/build/runTest.js:444:34)\n    at Object.worker (/Users/bernocrest/Desktop/dev/projects/claude-auto-worker/node_modules/jest-runner/build/testWorker.js:106:12)"],"fullName":"HelpCommand 특정 명령어 도움말 존재하지 않는 명령어에 대해 적절한 메시지를 표시해야 함","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"존재하지 않는 명령어에 대해 적절한 메시지를 표시해야 함"},{"ancestorTitles":["HelpCommand","명령어 목록"],"duration":1,"failureDetails":[{}],"failureMessages":["TypeError: command.run is not a function\n    at Object.<anonymous> (/Users/bernocrest/Desktop/dev/projects/claude-auto-worker/tests/unit/cli/help.command.spec.ts:68:23)\n    at Promise.then.completed (/Users/bernocrest/Desktop/dev/projects/claude-auto-worker/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/Users/bernocrest/Desktop/dev/projects/claude-auto-worker/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/Users/bernocrest/Desktop/dev/projects/claude-auto-worker/node_modules/jest-circus/build/run.js:316:40)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at _runTest (/Users/bernocrest/Desktop/dev/projects/claude-auto-worker/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/Users/bernocrest/Desktop/dev/projects/claude-auto-worker/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/Users/bernocrest/Desktop/dev/projects/claude-auto-worker/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/Users/bernocrest/Desktop/dev/projects/claude-auto-worker/node_modules/jest-circus/build/run.js:121:9)\n    at run (/Users/bernocrest/Desktop/dev/projects/claude-auto-worker/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/Users/bernocrest/Desktop/dev/projects/claude-auto-worker/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/Users/bernocrest/Desktop/dev/projects/claude-auto-worker/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/Users/bernocrest/Desktop/dev/projects/claude-auto-worker/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/Users/bernocrest/Desktop/dev/projects/claude-auto-worker/node_modules/jest-runner/build/runTest.js:444:34)\n    at Object.worker (/Users/bernocrest/Desktop/dev/projects/claude-auto-worker/node_modules/jest-runner/build/testWorker.js:106:12)"],"fullName":"HelpCommand 명령어 목록 사용 가능한 명령어 목록을 표시해야 함","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"사용 가능한 명령어 목록을 표시해야 함"},{"ancestorTitles":["HelpCommand","에러 처리"],"duration":3,"failureDetails":[{"matcherResult":{"actual":false,"expected":true,"message":"\u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32mtrue\u001b[39m\nReceived: \u001b[31mfalse\u001b[39m","name":"toBe","pass":false}}],"failureMessages":["Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32mtrue\u001b[39m\nReceived: \u001b[31mfalse\u001b[39m\n    at Object.<anonymous> (/Users/bernocrest/Desktop/dev/projects/claude-auto-worker/tests/unit/cli/help.command.spec.ts:86:53)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)"],"fullName":"HelpCommand 에러 처리 명령어 실행 중 에러가 발생해도 적절히 처리되어야 함","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"명령어 실행 중 에러가 발생해도 적절히 처리되어야 함"}],"endTime":1755591228930,"message":"\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1mHelpCommand › 기본 도움말 › 도움말을 표시할 때 에러가 발생하지 않아야 함\u001b[39m\u001b[22m\n\n    TypeError: command.run is not a function\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 18 |\u001b[39m       \u001b[22m\n\u001b[2m     \u001b[90m 19 |\u001b[39m       \u001b[36mtry\u001b[39m {\u001b[22m\n\u001b[2m    \u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 20 |\u001b[39m         \u001b[36mawait\u001b[39m command\u001b[33m.\u001b[39mrun([])\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m    |\u001b[39m                       \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 21 |\u001b[39m         expect(outputs\u001b[33m.\u001b[39msome(o \u001b[33m=>\u001b[39m o\u001b[33m.\u001b[39mtype \u001b[33m===\u001b[39m \u001b[32m'log'\u001b[39m))\u001b[33m.\u001b[39mtoBe(\u001b[36mtrue\u001b[39m)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 22 |\u001b[39m       } \u001b[36mfinally\u001b[39m {\u001b[22m\n\u001b[2m     \u001b[90m 23 |\u001b[39m         restore()\u001b[33m;\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.<anonymous> (\u001b[22m\u001b[2m\u001b[0m\u001b[36mtests/unit/cli/help.command.spec.ts\u001b[39m\u001b[0m\u001b[2m:20:23)\u001b[22m\u001b[2m\u001b[22m\n\n\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1mHelpCommand › 기본 도움말 › 도움말 메시지에 프로젝트 이름이 포함되어야 함\u001b[39m\u001b[22m\n\n    TypeError: command.run is not a function\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 29 |\u001b[39m       \u001b[22m\n\u001b[2m     \u001b[90m 30 |\u001b[39m       \u001b[36mtry\u001b[39m {\u001b[22m\n\u001b[2m    \u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 31 |\u001b[39m         \u001b[36mawait\u001b[39m command\u001b[33m.\u001b[39mrun([])\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m    |\u001b[39m                       \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 32 |\u001b[39m         expect(outputs\u001b[33m.\u001b[39msome(o \u001b[33m=>\u001b[39m o\u001b[33m.\u001b[39mmessage\u001b[33m.\u001b[39mincludes(\u001b[32m'claude-auto-worker'\u001b[39m)))\u001b[33m.\u001b[39mtoBe(\u001b[36mtrue\u001b[39m)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 33 |\u001b[39m       } \u001b[36mfinally\u001b[39m {\u001b[22m\n\u001b[2m     \u001b[90m 34 |\u001b[39m         restore()\u001b[33m;\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.<anonymous> (\u001b[22m\u001b[2m\u001b[0m\u001b[36mtests/unit/cli/help.command.spec.ts\u001b[39m\u001b[0m\u001b[2m:31:23)\u001b[22m\u001b[2m\u001b[22m\n\n\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1mHelpCommand › 특정 명령어 도움말 › 특정 명령어에 대한 도움말을 표시할 수 있어야 함\u001b[39m\u001b[22m\n\n    TypeError: command.run is not a function\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 42 |\u001b[39m       \u001b[22m\n\u001b[2m     \u001b[90m 43 |\u001b[39m       \u001b[36mtry\u001b[39m {\u001b[22m\n\u001b[2m    \u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 44 |\u001b[39m         \u001b[36mawait\u001b[39m command\u001b[33m.\u001b[39mrun([\u001b[32m'config'\u001b[39m])\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m    |\u001b[39m                       \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 45 |\u001b[39m         expect(outputs\u001b[33m.\u001b[39msome(o \u001b[33m=>\u001b[39m o\u001b[33m.\u001b[39mtype \u001b[33m===\u001b[39m \u001b[32m'log'\u001b[39m))\u001b[33m.\u001b[39mtoBe(\u001b[36mtrue\u001b[39m)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 46 |\u001b[39m       } \u001b[36mfinally\u001b[39m {\u001b[22m\n\u001b[2m     \u001b[90m 47 |\u001b[39m         restore()\u001b[33m;\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.<anonymous> (\u001b[22m\u001b[2m\u001b[0m\u001b[36mtests/unit/cli/help.command.spec.ts\u001b[39m\u001b[0m\u001b[2m:44:23)\u001b[22m\u001b[2m\u001b[22m\n\n\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1mHelpCommand › 특정 명령어 도움말 › 존재하지 않는 명령어에 대해 적절한 메시지를 표시해야 함\u001b[39m\u001b[22m\n\n    TypeError: command.run is not a function\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 53 |\u001b[39m       \u001b[22m\n\u001b[2m     \u001b[90m 54 |\u001b[39m       \u001b[36mtry\u001b[39m {\u001b[22m\n\u001b[2m    \u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 55 |\u001b[39m         \u001b[36mawait\u001b[39m command\u001b[33m.\u001b[39mrun([\u001b[32m'nonexistent'\u001b[39m])\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m    |\u001b[39m                       \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 56 |\u001b[39m         expect(outputs\u001b[33m.\u001b[39msome(o \u001b[33m=>\u001b[39m o\u001b[33m.\u001b[39mtype \u001b[33m===\u001b[39m \u001b[32m'log'\u001b[39m))\u001b[33m.\u001b[39mtoBe(\u001b[36mtrue\u001b[39m)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 57 |\u001b[39m       } \u001b[36mfinally\u001b[39m {\u001b[22m\n\u001b[2m     \u001b[90m 58 |\u001b[39m         restore()\u001b[33m;\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.<anonymous> (\u001b[22m\u001b[2m\u001b[0m\u001b[36mtests/unit/cli/help.command.spec.ts\u001b[39m\u001b[0m\u001b[2m:55:23)\u001b[22m\u001b[2m\u001b[22m\n\n\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1mHelpCommand › 명령어 목록 › 사용 가능한 명령어 목록을 표시해야 함\u001b[39m\u001b[22m\n\n    TypeError: command.run is not a function\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 66 |\u001b[39m       \u001b[22m\n\u001b[2m     \u001b[90m 67 |\u001b[39m       \u001b[36mtry\u001b[39m {\u001b[22m\n\u001b[2m    \u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 68 |\u001b[39m         \u001b[36mawait\u001b[39m command\u001b[33m.\u001b[39mrun([])\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m    |\u001b[39m                       \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 69 |\u001b[39m         \u001b[36mconst\u001b[39m helpOutput \u001b[33m=\u001b[39m outputs\u001b[33m.\u001b[39mfind(o \u001b[33m=>\u001b[39m o\u001b[33m.\u001b[39mtype \u001b[33m===\u001b[39m \u001b[32m'log'\u001b[39m)\u001b[33m?\u001b[39m\u001b[33m.\u001b[39mmessage \u001b[33m||\u001b[39m \u001b[32m''\u001b[39m\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 70 |\u001b[39m         expect(helpOutput)\u001b[33m.\u001b[39mtoContain(\u001b[32m'config'\u001b[39m)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 71 |\u001b[39m         expect(helpOutput)\u001b[33m.\u001b[39mtoContain(\u001b[32m'help'\u001b[39m)\u001b[33m;\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.<anonymous> (\u001b[22m\u001b[2m\u001b[0m\u001b[36mtests/unit/cli/help.command.spec.ts\u001b[39m\u001b[0m\u001b[2m:68:23)\u001b[22m\u001b[2m\u001b[22m\n\n\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1mHelpCommand › 에러 처리 › 명령어 실행 중 에러가 발생해도 적절히 처리되어야 함\u001b[39m\u001b[22m\n\n    \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\n    Expected: \u001b[32mtrue\u001b[39m\n    Received: \u001b[31mfalse\u001b[39m\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 84 |\u001b[39m           command\u001b[33m.\u001b[39mrun([\u001b[32m'invalid'\u001b[39m])\u001b[22m\n\u001b[2m     \u001b[90m 85 |\u001b[39m         )\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m    \u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 86 |\u001b[39m         expect(outputs\u001b[33m.\u001b[39msome(o \u001b[33m=>\u001b[39m o\u001b[33m.\u001b[39mtype \u001b[33m===\u001b[39m \u001b[32m'log'\u001b[39m))\u001b[33m.\u001b[39mtoBe(\u001b[36mtrue\u001b[39m)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m    |\u001b[39m                                                     \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 87 |\u001b[39m       } \u001b[36mfinally\u001b[39m {\u001b[22m\n\u001b[2m     \u001b[90m 88 |\u001b[39m         restore()\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 89 |\u001b[39m       }\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.<anonymous> (\u001b[22m\u001b[2m\u001b[0m\u001b[36mtests/unit/cli/help.command.spec.ts\u001b[39m\u001b[0m\u001b[2m:86:53)\u001b[22m\u001b[2m\u001b[22m\n","name":"/Users/bernocrest/Desktop/dev/projects/claude-auto-worker/tests/unit/cli/help.command.spec.ts","startTime":1755591225929,"status":"failed","summary":""},{"assertionResults":[{"ancestorTitles":["RunCommand","워크플로우 실행"],"duration":13,"failureDetails":[{"type":"RunCommand","context":{"index":0,"dependencies":[null,null]},"metadata":{"id":"fc425ebb912a53b9fec00"},"moduleRef":{"id":"4ffd3dc4e8fc425ebb912"}}],"failureMessages":["Error: Nest can't resolve dependencies of the RunCommand (?, WorkflowParserService). Please make sure that the argument ErrorHandlerService at index [0] is available in the RootTestModule context.\n\nPotential solutions:\n- Is RootTestModule a valid NestJS module?\n- If ErrorHandlerService is a provider, is it part of the current RootTestModule?\n- If ErrorHandlerService is exported from a separate @Module, is that module imported within RootTestModule?\n  @Module({\n    imports: [ /* the Module containing ErrorHandlerService */ ]\n  })\n\n    at TestingInjector.lookupComponentInParentModules (/Users/bernocrest/Desktop/dev/projects/claude-auto-worker/node_modules/@nestjs/core/injector/injector.js:262:19)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at TestingInjector.resolveComponentInstance (/Users/bernocrest/Desktop/dev/projects/claude-auto-worker/node_modules/@nestjs/core/injector/injector.js:215:33)\n    at TestingInjector.resolveComponentInstance (/Users/bernocrest/Desktop/dev/projects/claude-auto-worker/node_modules/@nestjs/testing/testing-injector.js:19:45)\n    at resolveParam (/Users/bernocrest/Desktop/dev/projects/claude-auto-worker/node_modules/@nestjs/core/injector/injector.js:129:38)\n    at async Promise.all (index 0)\n    at TestingInjector.resolveConstructorParams (/Users/bernocrest/Desktop/dev/projects/claude-auto-worker/node_modules/@nestjs/core/injector/injector.js:144:27)\n    at TestingInjector.loadInstance (/Users/bernocrest/Desktop/dev/projects/claude-auto-worker/node_modules/@nestjs/core/injector/injector.js:70:13)\n    at TestingInjector.loadProvider (/Users/bernocrest/Desktop/dev/projects/claude-auto-worker/node_modules/@nestjs/core/injector/injector.js:98:9)\n    at /Users/bernocrest/Desktop/dev/projects/claude-auto-worker/node_modules/@nestjs/core/injector/instance-loader.js:56:13\n    at async Promise.all (index 3)\n    at TestingInstanceLoader.createInstancesOfProviders (/Users/bernocrest/Desktop/dev/projects/claude-auto-worker/node_modules/@nestjs/core/injector/instance-loader.js:55:9)\n    at /Users/bernocrest/Desktop/dev/projects/claude-auto-worker/node_modules/@nestjs/core/injector/instance-loader.js:40:13\n    at async Promise.all (index 1)\n    at TestingInstanceLoader.createInstances (/Users/bernocrest/Desktop/dev/projects/claude-auto-worker/node_modules/@nestjs/core/injector/instance-loader.js:39:9)\n    at TestingInstanceLoader.createInstancesOfDependencies (/Users/bernocrest/Desktop/dev/projects/claude-auto-worker/node_modules/@nestjs/core/injector/instance-loader.js:22:13)\n    at TestingInstanceLoader.createInstancesOfDependencies (/Users/bernocrest/Desktop/dev/projects/claude-auto-worker/node_modules/@nestjs/testing/testing-instance-loader.js:9:9)\n    at TestingModuleBuilder.createInstancesOfDependencies (/Users/bernocrest/Desktop/dev/projects/claude-auto-worker/node_modules/@nestjs/testing/testing-module.builder.js:118:9)\n    at TestingModuleBuilder.compile (/Users/bernocrest/Desktop/dev/projects/claude-auto-worker/node_modules/@nestjs/testing/testing-module.builder.js:74:9)\n    at Object.<anonymous> (/Users/bernocrest/Desktop/dev/projects/claude-auto-worker/tests/unit/cli/run.command.spec.ts:9:23)"],"fullName":"RunCommand 워크플로우 실행 워크플로우를 실행할 때 에러가 발생하지 않아야 함","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"워크플로우를 실행할 때 에러가 발생하지 않아야 함"},{"ancestorTitles":["RunCommand","워크플로우 실행"],"duration":8,"failureDetails":[{"type":"RunCommand","context":{"index":0,"dependencies":[null,null]},"metadata":{"id":"a9addf6e81c7fa0905f75"},"moduleRef":{"id":"a53b9fec00a9addf6e81c"}}],"failureMessages":["Error: Nest can't resolve dependencies of the RunCommand (?, WorkflowParserService). Please make sure that the argument ErrorHandlerService at index [0] is available in the RootTestModule context.\n\nPotential solutions:\n- Is RootTestModule a valid NestJS module?\n- If ErrorHandlerService is a provider, is it part of the current RootTestModule?\n- If ErrorHandlerService is exported from a separate @Module, is that module imported within RootTestModule?\n  @Module({\n    imports: [ /* the Module containing ErrorHandlerService */ ]\n  })\n\n    at TestingInjector.lookupComponentInParentModules (/Users/bernocrest/Desktop/dev/projects/claude-auto-worker/node_modules/@nestjs/core/injector/injector.js:262:19)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at TestingInjector.resolveComponentInstance (/Users/bernocrest/Desktop/dev/projects/claude-auto-worker/node_modules/@nestjs/core/injector/injector.js:215:33)\n    at TestingInjector.resolveComponentInstance (/Users/bernocrest/Desktop/dev/projects/claude-auto-worker/node_modules/@nestjs/testing/testing-injector.js:19:45)\n    at resolveParam (/Users/bernocrest/Desktop/dev/projects/claude-auto-worker/node_modules/@nestjs/core/injector/injector.js:129:38)\n    at async Promise.all (index 0)\n    at TestingInjector.resolveConstructorParams (/Users/bernocrest/Desktop/dev/projects/claude-auto-worker/node_modules/@nestjs/core/injector/injector.js:144:27)\n    at TestingInjector.loadInstance (/Users/bernocrest/Desktop/dev/projects/claude-auto-worker/node_modules/@nestjs/core/injector/injector.js:70:13)\n    at TestingInjector.loadProvider (/Users/bernocrest/Desktop/dev/projects/claude-auto-worker/node_modules/@nestjs/core/injector/injector.js:98:9)\n    at /Users/bernocrest/Desktop/dev/projects/claude-auto-worker/node_modules/@nestjs/core/injector/instance-loader.js:56:13\n    at async Promise.all (index 3)\n    at TestingInstanceLoader.createInstancesOfProviders (/Users/bernocrest/Desktop/dev/projects/claude-auto-worker/node_modules/@nestjs/core/injector/instance-loader.js:55:9)\n    at /Users/bernocrest/Desktop/dev/projects/claude-auto-worker/node_modules/@nestjs/core/injector/instance-loader.js:40:13\n    at async Promise.all (index 1)\n    at TestingInstanceLoader.createInstances (/Users/bernocrest/Desktop/dev/projects/claude-auto-worker/node_modules/@nestjs/core/injector/instance-loader.js:39:9)\n    at TestingInstanceLoader.createInstancesOfDependencies (/Users/bernocrest/Desktop/dev/projects/claude-auto-worker/node_modules/@nestjs/core/injector/instance-loader.js:22:13)\n    at TestingInstanceLoader.createInstancesOfDependencies (/Users/bernocrest/Desktop/dev/projects/claude-auto-worker/node_modules/@nestjs/testing/testing-instance-loader.js:9:9)\n    at TestingModuleBuilder.createInstancesOfDependencies (/Users/bernocrest/Desktop/dev/projects/claude-auto-worker/node_modules/@nestjs/testing/testing-module.builder.js:118:9)\n    at TestingModuleBuilder.compile (/Users/bernocrest/Desktop/dev/projects/claude-auto-worker/node_modules/@nestjs/testing/testing-module.builder.js:74:9)\n    at Object.<anonymous> (/Users/bernocrest/Desktop/dev/projects/claude-auto-worker/tests/unit/cli/run.command.spec.ts:9:23)"],"fullName":"RunCommand 워크플로우 실행 워크플로우 파일 경로가 제공되어야 함","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"워크플로우 파일 경로가 제공되어야 함"},{"ancestorTitles":["RunCommand","실행 옵션"],"duration":7,"failureDetails":[{"type":"RunCommand","context":{"index":0,"dependencies":[null,null]},"metadata":{"id":"25ba2c8afc6c48539fdfb"},"moduleRef":{"id":"7fa0905f7525ba2c8afc6"}}],"failureMessages":["Error: Nest can't resolve dependencies of the RunCommand (?, WorkflowParserService). Please make sure that the argument ErrorHandlerService at index [0] is available in the RootTestModule context.\n\nPotential solutions:\n- Is RootTestModule a valid NestJS module?\n- If ErrorHandlerService is a provider, is it part of the current RootTestModule?\n- If ErrorHandlerService is exported from a separate @Module, is that module imported within RootTestModule?\n  @Module({\n    imports: [ /* the Module containing ErrorHandlerService */ ]\n  })\n\n    at TestingInjector.lookupComponentInParentModules (/Users/bernocrest/Desktop/dev/projects/claude-auto-worker/node_modules/@nestjs/core/injector/injector.js:262:19)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at TestingInjector.resolveComponentInstance (/Users/bernocrest/Desktop/dev/projects/claude-auto-worker/node_modules/@nestjs/core/injector/injector.js:215:33)\n    at TestingInjector.resolveComponentInstance (/Users/bernocrest/Desktop/dev/projects/claude-auto-worker/node_modules/@nestjs/testing/testing-injector.js:19:45)\n    at resolveParam (/Users/bernocrest/Desktop/dev/projects/claude-auto-worker/node_modules/@nestjs/core/injector/injector.js:129:38)\n    at async Promise.all (index 0)\n    at TestingInjector.resolveConstructorParams (/Users/bernocrest/Desktop/dev/projects/claude-auto-worker/node_modules/@nestjs/core/injector/injector.js:144:27)\n    at TestingInjector.loadInstance (/Users/bernocrest/Desktop/dev/projects/claude-auto-worker/node_modules/@nestjs/core/injector/injector.js:70:13)\n    at TestingInjector.loadProvider (/Users/bernocrest/Desktop/dev/projects/claude-auto-worker/node_modules/@nestjs/core/injector/injector.js:98:9)\n    at /Users/bernocrest/Desktop/dev/projects/claude-auto-worker/node_modules/@nestjs/core/injector/instance-loader.js:56:13\n    at async Promise.all (index 3)\n    at TestingInstanceLoader.createInstancesOfProviders (/Users/bernocrest/Desktop/dev/projects/claude-auto-worker/node_modules/@nestjs/core/injector/instance-loader.js:55:9)\n    at /Users/bernocrest/Desktop/dev/projects/claude-auto-worker/node_modules/@nestjs/core/injector/instance-loader.js:40:13\n    at async Promise.all (index 1)\n    at TestingInstanceLoader.createInstances (/Users/bernocrest/Desktop/dev/projects/claude-auto-worker/node_modules/@nestjs/core/injector/instance-loader.js:39:9)\n    at TestingInstanceLoader.createInstancesOfDependencies (/Users/bernocrest/Desktop/dev/projects/claude-auto-worker/node_modules/@nestjs/core/injector/instance-loader.js:22:13)\n    at TestingInstanceLoader.createInstancesOfDependencies (/Users/bernocrest/Desktop/dev/projects/claude-auto-worker/node_modules/@nestjs/testing/testing-instance-loader.js:9:9)\n    at TestingModuleBuilder.createInstancesOfDependencies (/Users/bernocrest/Desktop/dev/projects/claude-auto-worker/node_modules/@nestjs/testing/testing-module.builder.js:118:9)\n    at TestingModuleBuilder.compile (/Users/bernocrest/Desktop/dev/projects/claude-auto-worker/node_modules/@nestjs/testing/testing-module.builder.js:74:9)\n    at Object.<anonymous> (/Users/bernocrest/Desktop/dev/projects/claude-auto-worker/tests/unit/cli/run.command.spec.ts:9:23)"],"fullName":"RunCommand 실행 옵션 dry-run 옵션이 있을 때 실제 실행 없이 시뮬레이션해야 함","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"dry-run 옵션이 있을 때 실제 실행 없이 시뮬레이션해야 함"},{"ancestorTitles":["RunCommand","실행 옵션"],"duration":4,"failureDetails":[{"type":"RunCommand","context":{"index":0,"dependencies":[null,null]},"metadata":{"id":"5164c59cac1b7eff263d5"},"moduleRef":{"id":"c48539fdfb5164c59cac1"}}],"failureMessages":["Error: Nest can't resolve dependencies of the RunCommand (?, WorkflowParserService). Please make sure that the argument ErrorHandlerService at index [0] is available in the RootTestModule context.\n\nPotential solutions:\n- Is RootTestModule a valid NestJS module?\n- If ErrorHandlerService is a provider, is it part of the current RootTestModule?\n- If ErrorHandlerService is exported from a separate @Module, is that module imported within RootTestModule?\n  @Module({\n    imports: [ /* the Module containing ErrorHandlerService */ ]\n  })\n\n    at TestingInjector.lookupComponentInParentModules (/Users/bernocrest/Desktop/dev/projects/claude-auto-worker/node_modules/@nestjs/core/injector/injector.js:262:19)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at TestingInjector.resolveComponentInstance (/Users/bernocrest/Desktop/dev/projects/claude-auto-worker/node_modules/@nestjs/core/injector/injector.js:215:33)\n    at TestingInjector.resolveComponentInstance (/Users/bernocrest/Desktop/dev/projects/claude-auto-worker/node_modules/@nestjs/testing/testing-injector.js:19:45)\n    at resolveParam (/Users/bernocrest/Desktop/dev/projects/claude-auto-worker/node_modules/@nestjs/core/injector/injector.js:129:38)\n    at async Promise.all (index 0)\n    at TestingInjector.resolveConstructorParams (/Users/bernocrest/Desktop/dev/projects/claude-auto-worker/node_modules/@nestjs/core/injector/injector.js:144:27)\n    at TestingInjector.loadInstance (/Users/bernocrest/Desktop/dev/projects/claude-auto-worker/node_modules/@nestjs/core/injector/injector.js:70:13)\n    at TestingInjector.loadProvider (/Users/bernocrest/Desktop/dev/projects/claude-auto-worker/node_modules/@nestjs/core/injector/injector.js:98:9)\n    at /Users/bernocrest/Desktop/dev/projects/claude-auto-worker/node_modules/@nestjs/core/injector/instance-loader.js:56:13\n    at async Promise.all (index 3)\n    at TestingInstanceLoader.createInstancesOfProviders (/Users/bernocrest/Desktop/dev/projects/claude-auto-worker/node_modules/@nestjs/core/injector/instance-loader.js:55:9)\n    at /Users/bernocrest/Desktop/dev/projects/claude-auto-worker/node_modules/@nestjs/core/injector/instance-loader.js:40:13\n    at async Promise.all (index 1)\n    at TestingInstanceLoader.createInstances (/Users/bernocrest/Desktop/dev/projects/claude-auto-worker/node_modules/@nestjs/core/injector/instance-loader.js:39:9)\n    at TestingInstanceLoader.createInstancesOfDependencies (/Users/bernocrest/Desktop/dev/projects/claude-auto-worker/node_modules/@nestjs/core/injector/instance-loader.js:22:13)\n    at TestingInstanceLoader.createInstancesOfDependencies (/Users/bernocrest/Desktop/dev/projects/claude-auto-worker/node_modules/@nestjs/testing/testing-instance-loader.js:9:9)\n    at TestingModuleBuilder.createInstancesOfDependencies (/Users/bernocrest/Desktop/dev/projects/claude-auto-worker/node_modules/@nestjs/testing/testing-module.builder.js:118:9)\n    at TestingModuleBuilder.compile (/Users/bernocrest/Desktop/dev/projects/claude-auto-worker/node_modules/@nestjs/testing/testing-module.builder.js:74:9)\n    at Object.<anonymous> (/Users/bernocrest/Desktop/dev/projects/claude-auto-worker/tests/unit/cli/run.command.spec.ts:9:23)"],"fullName":"RunCommand 실행 옵션 verbose 옵션이 있을 때 상세한 로그를 출력해야 함","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"verbose 옵션이 있을 때 상세한 로그를 출력해야 함"},{"ancestorTitles":["RunCommand","실행 옵션"],"duration":2,"failureDetails":[{"type":"RunCommand","context":{"index":0,"dependencies":[null,null]},"metadata":{"id":"7e637c02be44c5e2a2e37"},"moduleRef":{"id":"b7eff263d57e637c02be4"}}],"failureMessages":["Error: Nest can't resolve dependencies of the RunCommand (?, WorkflowParserService). Please make sure that the argument ErrorHandlerService at index [0] is available in the RootTestModule context.\n\nPotential solutions:\n- Is RootTestModule a valid NestJS module?\n- If ErrorHandlerService is a provider, is it part of the current RootTestModule?\n- If ErrorHandlerService is exported from a separate @Module, is that module imported within RootTestModule?\n  @Module({\n    imports: [ /* the Module containing ErrorHandlerService */ ]\n  })\n\n    at TestingInjector.lookupComponentInParentModules (/Users/bernocrest/Desktop/dev/projects/claude-auto-worker/node_modules/@nestjs/core/injector/injector.js:262:19)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at TestingInjector.resolveComponentInstance (/Users/bernocrest/Desktop/dev/projects/claude-auto-worker/node_modules/@nestjs/core/injector/injector.js:215:33)\n    at TestingInjector.resolveComponentInstance (/Users/bernocrest/Desktop/dev/projects/claude-auto-worker/node_modules/@nestjs/testing/testing-injector.js:19:45)\n    at resolveParam (/Users/bernocrest/Desktop/dev/projects/claude-auto-worker/node_modules/@nestjs/core/injector/injector.js:129:38)\n    at async Promise.all (index 0)\n    at TestingInjector.resolveConstructorParams (/Users/bernocrest/Desktop/dev/projects/claude-auto-worker/node_modules/@nestjs/core/injector/injector.js:144:27)\n    at TestingInjector.loadInstance (/Users/bernocrest/Desktop/dev/projects/claude-auto-worker/node_modules/@nestjs/core/injector/injector.js:70:13)\n    at TestingInjector.loadProvider (/Users/bernocrest/Desktop/dev/projects/claude-auto-worker/node_modules/@nestjs/core/injector/injector.js:98:9)\n    at /Users/bernocrest/Desktop/dev/projects/claude-auto-worker/node_modules/@nestjs/core/injector/instance-loader.js:56:13\n    at async Promise.all (index 3)\n    at TestingInstanceLoader.createInstancesOfProviders (/Users/bernocrest/Desktop/dev/projects/claude-auto-worker/node_modules/@nestjs/core/injector/instance-loader.js:55:9)\n    at /Users/bernocrest/Desktop/dev/projects/claude-auto-worker/node_modules/@nestjs/core/injector/instance-loader.js:40:13\n    at async Promise.all (index 1)\n    at TestingInstanceLoader.createInstances (/Users/bernocrest/Desktop/dev/projects/claude-auto-worker/node_modules/@nestjs/core/injector/instance-loader.js:39:9)\n    at TestingInstanceLoader.createInstancesOfDependencies (/Users/bernocrest/Desktop/dev/projects/claude-auto-worker/node_modules/@nestjs/core/injector/instance-loader.js:22:13)\n    at TestingInstanceLoader.createInstancesOfDependencies (/Users/bernocrest/Desktop/dev/projects/claude-auto-worker/node_modules/@nestjs/testing/testing-instance-loader.js:9:9)\n    at TestingModuleBuilder.createInstancesOfDependencies (/Users/bernocrest/Desktop/dev/projects/claude-auto-worker/node_modules/@nestjs/testing/testing-module.builder.js:118:9)\n    at TestingModuleBuilder.compile (/Users/bernocrest/Desktop/dev/projects/claude-auto-worker/node_modules/@nestjs/testing/testing-module.builder.js:74:9)\n    at Object.<anonymous> (/Users/bernocrest/Desktop/dev/projects/claude-auto-worker/tests/unit/cli/run.command.spec.ts:9:23)"],"fullName":"RunCommand 실행 옵션 timeout 옵션이 있을 때 적절한 시간 제한을 설정해야 함","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"timeout 옵션이 있을 때 적절한 시간 제한을 설정해야 함"},{"ancestorTitles":["RunCommand","워크플로우 검증"],"duration":1,"failureDetails":[{"type":"RunCommand","context":{"index":0,"dependencies":[null,null]},"metadata":{"id":"13df89208986db4a1a3ba"},"moduleRef":{"id":"4c5e2a2e3713df8920898"}}],"failureMessages":["Error: Nest can't resolve dependencies of the RunCommand (?, WorkflowParserService). Please make sure that the argument ErrorHandlerService at index [0] is available in the RootTestModule context.\n\nPotential solutions:\n- Is RootTestModule a valid NestJS module?\n- If ErrorHandlerService is a provider, is it part of the current RootTestModule?\n- If ErrorHandlerService is exported from a separate @Module, is that module imported within RootTestModule?\n  @Module({\n    imports: [ /* the Module containing ErrorHandlerService */ ]\n  })\n\n    at TestingInjector.lookupComponentInParentModules (/Users/bernocrest/Desktop/dev/projects/claude-auto-worker/node_modules/@nestjs/core/injector/injector.js:262:19)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at TestingInjector.resolveComponentInstance (/Users/bernocrest/Desktop/dev/projects/claude-auto-worker/node_modules/@nestjs/core/injector/injector.js:215:33)\n    at TestingInjector.resolveComponentInstance (/Users/bernocrest/Desktop/dev/projects/claude-auto-worker/node_modules/@nestjs/testing/testing-injector.js:19:45)\n    at resolveParam (/Users/bernocrest/Desktop/dev/projects/claude-auto-worker/node_modules/@nestjs/core/injector/injector.js:129:38)\n    at async Promise.all (index 0)\n    at TestingInjector.resolveConstructorParams (/Users/bernocrest/Desktop/dev/projects/claude-auto-worker/node_modules/@nestjs/core/injector/injector.js:144:27)\n    at TestingInjector.loadInstance (/Users/bernocrest/Desktop/dev/projects/claude-auto-worker/node_modules/@nestjs/core/injector/injector.js:70:13)\n    at TestingInjector.loadProvider (/Users/bernocrest/Desktop/dev/projects/claude-auto-worker/node_modules/@nestjs/core/injector/injector.js:98:9)\n    at /Users/bernocrest/Desktop/dev/projects/claude-auto-worker/node_modules/@nestjs/core/injector/instance-loader.js:56:13\n    at async Promise.all (index 3)\n    at TestingInstanceLoader.createInstancesOfProviders (/Users/bernocrest/Desktop/dev/projects/claude-auto-worker/node_modules/@nestjs/core/injector/instance-loader.js:55:9)\n    at /Users/bernocrest/Desktop/dev/projects/claude-auto-worker/node_modules/@nestjs/core/injector/instance-loader.js:40:13\n    at async Promise.all (index 1)\n    at TestingInstanceLoader.createInstances (/Users/bernocrest/Desktop/dev/projects/claude-auto-worker/node_modules/@nestjs/core/injector/instance-loader.js:39:9)\n    at TestingInstanceLoader.createInstancesOfDependencies (/Users/bernocrest/Desktop/dev/projects/claude-auto-worker/node_modules/@nestjs/core/injector/instance-loader.js:22:13)\n    at TestingInstanceLoader.createInstancesOfDependencies (/Users/bernocrest/Desktop/dev/projects/claude-auto-worker/node_modules/@nestjs/testing/testing-instance-loader.js:9:9)\n    at TestingModuleBuilder.createInstancesOfDependencies (/Users/bernocrest/Desktop/dev/projects/claude-auto-worker/node_modules/@nestjs/testing/testing-module.builder.js:118:9)\n    at TestingModuleBuilder.compile (/Users/bernocrest/Desktop/dev/projects/claude-auto-worker/node_modules/@nestjs/testing/testing-module.builder.js:74:9)\n    at Object.<anonymous> (/Users/bernocrest/Desktop/dev/projects/claude-auto-worker/tests/unit/cli/run.command.spec.ts:9:23)"],"fullName":"RunCommand 워크플로우 검증 워크플로우 파일이 존재하지 않을 때 적절한 에러를 표시해야 함","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"워크플로우 파일이 존재하지 않을 때 적절한 에러를 표시해야 함"},{"ancestorTitles":["RunCommand","워크플로우 검증"],"duration":3,"failureDetails":[{"type":"RunCommand","context":{"index":0,"dependencies":[null,null]},"metadata":{"id":"2f1065d54cc4cbcd852cc"},"moduleRef":{"id":"6db4a1a3ba2f1065d54cc"}}],"failureMessages":["Error: Nest can't resolve dependencies of the RunCommand (?, WorkflowParserService). Please make sure that the argument ErrorHandlerService at index [0] is available in the RootTestModule context.\n\nPotential solutions:\n- Is RootTestModule a valid NestJS module?\n- If ErrorHandlerService is a provider, is it part of the current RootTestModule?\n- If ErrorHandlerService is exported from a separate @Module, is that module imported within RootTestModule?\n  @Module({\n    imports: [ /* the Module containing ErrorHandlerService */ ]\n  })\n\n    at TestingInjector.lookupComponentInParentModules (/Users/bernocrest/Desktop/dev/projects/claude-auto-worker/node_modules/@nestjs/core/injector/injector.js:262:19)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at TestingInjector.resolveComponentInstance (/Users/bernocrest/Desktop/dev/projects/claude-auto-worker/node_modules/@nestjs/core/injector/injector.js:215:33)\n    at TestingInjector.resolveComponentInstance (/Users/bernocrest/Desktop/dev/projects/claude-auto-worker/node_modules/@nestjs/testing/testing-injector.js:19:45)\n    at resolveParam (/Users/bernocrest/Desktop/dev/projects/claude-auto-worker/node_modules/@nestjs/core/injector/injector.js:129:38)\n    at async Promise.all (index 0)\n    at TestingInjector.resolveConstructorParams (/Users/bernocrest/Desktop/dev/projects/claude-auto-worker/node_modules/@nestjs/core/injector/injector.js:144:27)\n    at TestingInjector.loadInstance (/Users/bernocrest/Desktop/dev/projects/claude-auto-worker/node_modules/@nestjs/core/injector/injector.js:70:13)\n    at TestingInjector.loadProvider (/Users/bernocrest/Desktop/dev/projects/claude-auto-worker/node_modules/@nestjs/core/injector/injector.js:98:9)\n    at /Users/bernocrest/Desktop/dev/projects/claude-auto-worker/node_modules/@nestjs/core/injector/instance-loader.js:56:13\n    at async Promise.all (index 3)\n    at TestingInstanceLoader.createInstancesOfProviders (/Users/bernocrest/Desktop/dev/projects/claude-auto-worker/node_modules/@nestjs/core/injector/instance-loader.js:55:9)\n    at /Users/bernocrest/Desktop/dev/projects/claude-auto-worker/node_modules/@nestjs/core/injector/instance-loader.js:40:13\n    at async Promise.all (index 1)\n    at TestingInstanceLoader.createInstances (/Users/bernocrest/Desktop/dev/projects/claude-auto-worker/node_modules/@nestjs/core/injector/instance-loader.js:39:9)\n    at TestingInstanceLoader.createInstancesOfDependencies (/Users/bernocrest/Desktop/dev/projects/claude-auto-worker/node_modules/@nestjs/core/injector/instance-loader.js:22:13)\n    at TestingInstanceLoader.createInstancesOfDependencies (/Users/bernocrest/Desktop/dev/projects/claude-auto-worker/node_modules/@nestjs/testing/testing-instance-loader.js:9:9)\n    at TestingModuleBuilder.createInstancesOfDependencies (/Users/bernocrest/Desktop/dev/projects/claude-auto-worker/node_modules/@nestjs/testing/testing-module.builder.js:118:9)\n    at TestingModuleBuilder.compile (/Users/bernocrest/Desktop/dev/projects/claude-auto-worker/node_modules/@nestjs/testing/testing-module.builder.js:74:9)\n    at Object.<anonymous> (/Users/bernocrest/Desktop/dev/projects/claude-auto-worker/tests/unit/cli/run.command.spec.ts:9:23)"],"fullName":"RunCommand 워크플로우 검증 워크플로우 파일 형식이 잘못되었을 때 적절한 에러를 표시해야 함","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"워크플로우 파일 형식이 잘못되었을 때 적절한 에러를 표시해야 함"},{"ancestorTitles":["RunCommand","실행 상태"],"duration":1,"failureDetails":[{"type":"RunCommand","context":{"index":0,"dependencies":[null,null]},"metadata":{"id":"cfd7585cbc668207ff381"},"moduleRef":{"id":"4cbcd852cccfd7585cbc6"}}],"failureMessages":["Error: Nest can't resolve dependencies of the RunCommand (?, WorkflowParserService). Please make sure that the argument ErrorHandlerService at index [0] is available in the RootTestModule context.\n\nPotential solutions:\n- Is RootTestModule a valid NestJS module?\n- If ErrorHandlerService is a provider, is it part of the current RootTestModule?\n- If ErrorHandlerService is exported from a separate @Module, is that module imported within RootTestModule?\n  @Module({\n    imports: [ /* the Module containing ErrorHandlerService */ ]\n  })\n\n    at TestingInjector.lookupComponentInParentModules (/Users/bernocrest/Desktop/dev/projects/claude-auto-worker/node_modules/@nestjs/core/injector/injector.js:262:19)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at TestingInjector.resolveComponentInstance (/Users/bernocrest/Desktop/dev/projects/claude-auto-worker/node_modules/@nestjs/core/injector/injector.js:215:33)\n    at TestingInjector.resolveComponentInstance (/Users/bernocrest/Desktop/dev/projects/claude-auto-worker/node_modules/@nestjs/testing/testing-injector.js:19:45)\n    at resolveParam (/Users/bernocrest/Desktop/dev/projects/claude-auto-worker/node_modules/@nestjs/core/injector/injector.js:129:38)\n    at async Promise.all (index 0)\n    at TestingInjector.resolveConstructorParams (/Users/bernocrest/Desktop/dev/projects/claude-auto-worker/node_modules/@nestjs/core/injector/injector.js:144:27)\n    at TestingInjector.loadInstance (/Users/bernocrest/Desktop/dev/projects/claude-auto-worker/node_modules/@nestjs/core/injector/injector.js:70:13)\n    at TestingInjector.loadProvider (/Users/bernocrest/Desktop/dev/projects/claude-auto-worker/node_modules/@nestjs/core/injector/injector.js:98:9)\n    at /Users/bernocrest/Desktop/dev/projects/claude-auto-worker/node_modules/@nestjs/core/injector/instance-loader.js:56:13\n    at async Promise.all (index 3)\n    at TestingInstanceLoader.createInstancesOfProviders (/Users/bernocrest/Desktop/dev/projects/claude-auto-worker/node_modules/@nestjs/core/injector/instance-loader.js:55:9)\n    at /Users/bernocrest/Desktop/dev/projects/claude-auto-worker/node_modules/@nestjs/core/injector/instance-loader.js:40:13\n    at async Promise.all (index 1)\n    at TestingInstanceLoader.createInstances (/Users/bernocrest/Desktop/dev/projects/claude-auto-worker/node_modules/@nestjs/core/injector/instance-loader.js:39:9)\n    at TestingInstanceLoader.createInstancesOfDependencies (/Users/bernocrest/Desktop/dev/projects/claude-auto-worker/node_modules/@nestjs/core/injector/instance-loader.js:22:13)\n    at TestingInstanceLoader.createInstancesOfDependencies (/Users/bernocrest/Desktop/dev/projects/claude-auto-worker/node_modules/@nestjs/testing/testing-instance-loader.js:9:9)\n    at TestingModuleBuilder.createInstancesOfDependencies (/Users/bernocrest/Desktop/dev/projects/claude-auto-worker/node_modules/@nestjs/testing/testing-module.builder.js:118:9)\n    at TestingModuleBuilder.compile (/Users/bernocrest/Desktop/dev/projects/claude-auto-worker/node_modules/@nestjs/testing/testing-module.builder.js:74:9)\n    at Object.<anonymous> (/Users/bernocrest/Desktop/dev/projects/claude-auto-worker/tests/unit/cli/run.command.spec.ts:9:23)"],"fullName":"RunCommand 실행 상태 워크플로우 실행 상태를 적절히 표시해야 함","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"워크플로우 실행 상태를 적절히 표시해야 함"},{"ancestorTitles":["RunCommand","실행 상태"],"duration":1,"failureDetails":[{"type":"RunCommand","context":{"index":0,"dependencies":[null,null]},"metadata":{"id":"9d18984068b5e099501e8"},"moduleRef":{"id":"68207ff3819d18984068b"}}],"failureMessages":["Error: Nest can't resolve dependencies of the RunCommand (?, WorkflowParserService). Please make sure that the argument ErrorHandlerService at index [0] is available in the RootTestModule context.\n\nPotential solutions:\n- Is RootTestModule a valid NestJS module?\n- If ErrorHandlerService is a provider, is it part of the current RootTestModule?\n- If ErrorHandlerService is exported from a separate @Module, is that module imported within RootTestModule?\n  @Module({\n    imports: [ /* the Module containing ErrorHandlerService */ ]\n  })\n\n    at TestingInjector.lookupComponentInParentModules (/Users/bernocrest/Desktop/dev/projects/claude-auto-worker/node_modules/@nestjs/core/injector/injector.js:262:19)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at TestingInjector.resolveComponentInstance (/Users/bernocrest/Desktop/dev/projects/claude-auto-worker/node_modules/@nestjs/core/injector/injector.js:215:33)\n    at TestingInjector.resolveComponentInstance (/Users/bernocrest/Desktop/dev/projects/claude-auto-worker/node_modules/@nestjs/testing/testing-injector.js:19:45)\n    at resolveParam (/Users/bernocrest/Desktop/dev/projects/claude-auto-worker/node_modules/@nestjs/core/injector/injector.js:129:38)\n    at async Promise.all (index 0)\n    at TestingInjector.resolveConstructorParams (/Users/bernocrest/Desktop/dev/projects/claude-auto-worker/node_modules/@nestjs/core/injector/injector.js:144:27)\n    at TestingInjector.loadInstance (/Users/bernocrest/Desktop/dev/projects/claude-auto-worker/node_modules/@nestjs/core/injector/injector.js:70:13)\n    at TestingInjector.loadProvider (/Users/bernocrest/Desktop/dev/projects/claude-auto-worker/node_modules/@nestjs/core/injector/injector.js:98:9)\n    at /Users/bernocrest/Desktop/dev/projects/claude-auto-worker/node_modules/@nestjs/core/injector/instance-loader.js:56:13\n    at async Promise.all (index 3)\n    at TestingInstanceLoader.createInstancesOfProviders (/Users/bernocrest/Desktop/dev/projects/claude-auto-worker/node_modules/@nestjs/core/injector/instance-loader.js:55:9)\n    at /Users/bernocrest/Desktop/dev/projects/claude-auto-worker/node_modules/@nestjs/core/injector/instance-loader.js:40:13\n    at async Promise.all (index 1)\n    at TestingInstanceLoader.createInstances (/Users/bernocrest/Desktop/dev/projects/claude-auto-worker/node_modules/@nestjs/core/injector/instance-loader.js:39:9)\n    at TestingInstanceLoader.createInstancesOfDependencies (/Users/bernocrest/Desktop/dev/projects/claude-auto-worker/node_modules/@nestjs/core/injector/instance-loader.js:22:13)\n    at TestingInstanceLoader.createInstancesOfDependencies (/Users/bernocrest/Desktop/dev/projects/claude-auto-worker/node_modules/@nestjs/testing/testing-instance-loader.js:9:9)\n    at TestingModuleBuilder.createInstancesOfDependencies (/Users/bernocrest/Desktop/dev/projects/claude-auto-worker/node_modules/@nestjs/testing/testing-module.builder.js:118:9)\n    at TestingModuleBuilder.compile (/Users/bernocrest/Desktop/dev/projects/claude-auto-worker/node_modules/@nestjs/testing/testing-module.builder.js:74:9)\n    at Object.<anonymous> (/Users/bernocrest/Desktop/dev/projects/claude-auto-worker/tests/unit/cli/run.command.spec.ts:9:23)"],"fullName":"RunCommand 실행 상태 실행 완료 시 적절한 완료 메시지를 표시해야 함","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"실행 완료 시 적절한 완료 메시지를 표시해야 함"},{"ancestorTitles":["RunCommand","에러 처리"],"duration":1,"failureDetails":[{"type":"RunCommand","context":{"index":0,"dependencies":[null,null]},"metadata":{"id":"01c47c3489ecc2c89c1f5"},"moduleRef":{"id":"5e099501e801c47c3489e"}}],"failureMessages":["Error: Nest can't resolve dependencies of the RunCommand (?, WorkflowParserService). Please make sure that the argument ErrorHandlerService at index [0] is available in the RootTestModule context.\n\nPotential solutions:\n- Is RootTestModule a valid NestJS module?\n- If ErrorHandlerService is a provider, is it part of the current RootTestModule?\n- If ErrorHandlerService is exported from a separate @Module, is that module imported within RootTestModule?\n  @Module({\n    imports: [ /* the Module containing ErrorHandlerService */ ]\n  })\n\n    at TestingInjector.lookupComponentInParentModules (/Users/bernocrest/Desktop/dev/projects/claude-auto-worker/node_modules/@nestjs/core/injector/injector.js:262:19)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at TestingInjector.resolveComponentInstance (/Users/bernocrest/Desktop/dev/projects/claude-auto-worker/node_modules/@nestjs/core/injector/injector.js:215:33)\n    at TestingInjector.resolveComponentInstance (/Users/bernocrest/Desktop/dev/projects/claude-auto-worker/node_modules/@nestjs/testing/testing-injector.js:19:45)\n    at resolveParam (/Users/bernocrest/Desktop/dev/projects/claude-auto-worker/node_modules/@nestjs/core/injector/injector.js:129:38)\n    at async Promise.all (index 0)\n    at TestingInjector.resolveConstructorParams (/Users/bernocrest/Desktop/dev/projects/claude-auto-worker/node_modules/@nestjs/core/injector/injector.js:144:27)\n    at TestingInjector.loadInstance (/Users/bernocrest/Desktop/dev/projects/claude-auto-worker/node_modules/@nestjs/core/injector/injector.js:70:13)\n    at TestingInjector.loadProvider (/Users/bernocrest/Desktop/dev/projects/claude-auto-worker/node_modules/@nestjs/core/injector/injector.js:98:9)\n    at /Users/bernocrest/Desktop/dev/projects/claude-auto-worker/node_modules/@nestjs/core/injector/instance-loader.js:56:13\n    at async Promise.all (index 3)\n    at TestingInstanceLoader.createInstancesOfProviders (/Users/bernocrest/Desktop/dev/projects/claude-auto-worker/node_modules/@nestjs/core/injector/instance-loader.js:55:9)\n    at /Users/bernocrest/Desktop/dev/projects/claude-auto-worker/node_modules/@nestjs/core/injector/instance-loader.js:40:13\n    at async Promise.all (index 1)\n    at TestingInstanceLoader.createInstances (/Users/bernocrest/Desktop/dev/projects/claude-auto-worker/node_modules/@nestjs/core/injector/instance-loader.js:39:9)\n    at TestingInstanceLoader.createInstancesOfDependencies (/Users/bernocrest/Desktop/dev/projects/claude-auto-worker/node_modules/@nestjs/core/injector/instance-loader.js:22:13)\n    at TestingInstanceLoader.createInstancesOfDependencies (/Users/bernocrest/Desktop/dev/projects/claude-auto-worker/node_modules/@nestjs/testing/testing-instance-loader.js:9:9)\n    at TestingModuleBuilder.createInstancesOfDependencies (/Users/bernocrest/Desktop/dev/projects/claude-auto-worker/node_modules/@nestjs/testing/testing-module.builder.js:118:9)\n    at TestingModuleBuilder.compile (/Users/bernocrest/Desktop/dev/projects/claude-auto-worker/node_modules/@nestjs/testing/testing-module.builder.js:74:9)\n    at Object.<anonymous> (/Users/bernocrest/Desktop/dev/projects/claude-auto-worker/tests/unit/cli/run.command.spec.ts:9:23)"],"fullName":"RunCommand 에러 처리 워크플로우 실행 중 에러가 발생해도 적절히 처리되어야 함","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"워크플로우 실행 중 에러가 발생해도 적절히 처리되어야 함"}],"endTime":1755591229013,"message":"\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1mRunCommand › 워크플로우 실행 › 워크플로우를 실행할 때 에러가 발생하지 않아야 함\u001b[39m\u001b[22m\n\n    Nest can't resolve dependencies of the RunCommand (?, WorkflowParserService). Please make sure that the argument ErrorHandlerService at index [0] is available in the RootTestModule context.\n\n    Potential solutions:\n    - Is RootTestModule a valid NestJS module?\n    - If ErrorHandlerService is a provider, is it part of the current RootTestModule?\n    - If ErrorHandlerService is exported from a separate @Module, is that module imported within RootTestModule?\n      @Module({\n        imports: [ /* the Module containing ErrorHandlerService */ ]\n      })\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m  7 |\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m  8 |\u001b[39m   beforeEach(\u001b[36masync\u001b[39m () \u001b[33m=>\u001b[39m {\u001b[22m\n\u001b[2m    \u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m  9 |\u001b[39m     \u001b[36mconst\u001b[39m moduleRef \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m \u001b[33mTest\u001b[39m\u001b[33m.\u001b[39mcreateTestingModule({\u001b[22m\n\u001b[2m     \u001b[90m    |\u001b[39m                       \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 10 |\u001b[39m       providers\u001b[33m:\u001b[39m [\u001b[33mRunCommand\u001b[39m]\u001b[33m,\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 11 |\u001b[39m     })\u001b[33m.\u001b[39mcompile()\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 12 |\u001b[39m     command \u001b[33m=\u001b[39m moduleRef\u001b[33m.\u001b[39m\u001b[36mget\u001b[39m(\u001b[33mRunCommand\u001b[39m)\u001b[33m;\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat TestingInjector.lookupComponentInParentModules (\u001b[22m\u001b[2mnode_modules/@nestjs/core/injector/injector.js\u001b[2m:262:19)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat TestingInjector.resolveComponentInstance (\u001b[22m\u001b[2mnode_modules/@nestjs/core/injector/injector.js\u001b[2m:215:33)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat TestingInjector.resolveComponentInstance (\u001b[22m\u001b[2mnode_modules/@nestjs/testing/testing-injector.js\u001b[2m:19:45)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat resolveParam (\u001b[22m\u001b[2mnode_modules/@nestjs/core/injector/injector.js\u001b[2m:129:38)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m          at async Promise.all (index 0)\u001b[22m\n\u001b[2m      \u001b[2mat TestingInjector.resolveConstructorParams (\u001b[22m\u001b[2mnode_modules/@nestjs/core/injector/injector.js\u001b[2m:144:27)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat TestingInjector.loadInstance (\u001b[22m\u001b[2mnode_modules/@nestjs/core/injector/injector.js\u001b[2m:70:13)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat TestingInjector.loadProvider (\u001b[22m\u001b[2mnode_modules/@nestjs/core/injector/injector.js\u001b[2m:98:9)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat \u001b[22m\u001b[2mnode_modules/@nestjs/core/injector/instance-loader.js\u001b[2m:56:13\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m          at async Promise.all (index 3)\u001b[22m\n\u001b[2m      \u001b[2mat TestingInstanceLoader.createInstancesOfProviders (\u001b[22m\u001b[2mnode_modules/@nestjs/core/injector/instance-loader.js\u001b[2m:55:9)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat \u001b[22m\u001b[2mnode_modules/@nestjs/core/injector/instance-loader.js\u001b[2m:40:13\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m          at async Promise.all (index 1)\u001b[22m\n\u001b[2m      \u001b[2mat TestingInstanceLoader.createInstances (\u001b[22m\u001b[2mnode_modules/@nestjs/core/injector/instance-loader.js\u001b[2m:39:9)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat TestingInstanceLoader.createInstancesOfDependencies (\u001b[22m\u001b[2mnode_modules/@nestjs/core/injector/instance-loader.js\u001b[2m:22:13)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat TestingInstanceLoader.createInstancesOfDependencies (\u001b[22m\u001b[2mnode_modules/@nestjs/testing/testing-instance-loader.js\u001b[2m:9:9)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat TestingModuleBuilder.createInstancesOfDependencies (\u001b[22m\u001b[2mnode_modules/@nestjs/testing/testing-module.builder.js\u001b[2m:118:9)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat TestingModuleBuilder.compile (\u001b[22m\u001b[2mnode_modules/@nestjs/testing/testing-module.builder.js\u001b[2m:74:9)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.<anonymous> (\u001b[22m\u001b[2m\u001b[0m\u001b[36mtests/unit/cli/run.command.spec.ts\u001b[39m\u001b[0m\u001b[2m:9:23)\u001b[22m\u001b[2m\u001b[22m\n\n\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1mRunCommand › 워크플로우 실행 › 워크플로우 파일 경로가 제공되어야 함\u001b[39m\u001b[22m\n\n    Nest can't resolve dependencies of the RunCommand (?, WorkflowParserService). Please make sure that the argument ErrorHandlerService at index [0] is available in the RootTestModule context.\n\n    Potential solutions:\n    - Is RootTestModule a valid NestJS module?\n    - If ErrorHandlerService is a provider, is it part of the current RootTestModule?\n    - If ErrorHandlerService is exported from a separate @Module, is that module imported within RootTestModule?\n      @Module({\n        imports: [ /* the Module containing ErrorHandlerService */ ]\n      })\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m  7 |\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m  8 |\u001b[39m   beforeEach(\u001b[36masync\u001b[39m () \u001b[33m=>\u001b[39m {\u001b[22m\n\u001b[2m    \u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m  9 |\u001b[39m     \u001b[36mconst\u001b[39m moduleRef \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m \u001b[33mTest\u001b[39m\u001b[33m.\u001b[39mcreateTestingModule({\u001b[22m\n\u001b[2m     \u001b[90m    |\u001b[39m                       \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 10 |\u001b[39m       providers\u001b[33m:\u001b[39m [\u001b[33mRunCommand\u001b[39m]\u001b[33m,\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 11 |\u001b[39m     })\u001b[33m.\u001b[39mcompile()\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 12 |\u001b[39m     command \u001b[33m=\u001b[39m moduleRef\u001b[33m.\u001b[39m\u001b[36mget\u001b[39m(\u001b[33mRunCommand\u001b[39m)\u001b[33m;\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat TestingInjector.lookupComponentInParentModules (\u001b[22m\u001b[2mnode_modules/@nestjs/core/injector/injector.js\u001b[2m:262:19)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat TestingInjector.resolveComponentInstance (\u001b[22m\u001b[2mnode_modules/@nestjs/core/injector/injector.js\u001b[2m:215:33)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat TestingInjector.resolveComponentInstance (\u001b[22m\u001b[2mnode_modules/@nestjs/testing/testing-injector.js\u001b[2m:19:45)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat resolveParam (\u001b[22m\u001b[2mnode_modules/@nestjs/core/injector/injector.js\u001b[2m:129:38)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m          at async Promise.all (index 0)\u001b[22m\n\u001b[2m      \u001b[2mat TestingInjector.resolveConstructorParams (\u001b[22m\u001b[2mnode_modules/@nestjs/core/injector/injector.js\u001b[2m:144:27)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat TestingInjector.loadInstance (\u001b[22m\u001b[2mnode_modules/@nestjs/core/injector/injector.js\u001b[2m:70:13)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat TestingInjector.loadProvider (\u001b[22m\u001b[2mnode_modules/@nestjs/core/injector/injector.js\u001b[2m:98:9)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat \u001b[22m\u001b[2mnode_modules/@nestjs/core/injector/instance-loader.js\u001b[2m:56:13\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m          at async Promise.all (index 3)\u001b[22m\n\u001b[2m      \u001b[2mat TestingInstanceLoader.createInstancesOfProviders (\u001b[22m\u001b[2mnode_modules/@nestjs/core/injector/instance-loader.js\u001b[2m:55:9)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat \u001b[22m\u001b[2mnode_modules/@nestjs/core/injector/instance-loader.js\u001b[2m:40:13\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m          at async Promise.all (index 1)\u001b[22m\n\u001b[2m      \u001b[2mat TestingInstanceLoader.createInstances (\u001b[22m\u001b[2mnode_modules/@nestjs/core/injector/instance-loader.js\u001b[2m:39:9)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat TestingInstanceLoader.createInstancesOfDependencies (\u001b[22m\u001b[2mnode_modules/@nestjs/core/injector/instance-loader.js\u001b[2m:22:13)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat TestingInstanceLoader.createInstancesOfDependencies (\u001b[22m\u001b[2mnode_modules/@nestjs/testing/testing-instance-loader.js\u001b[2m:9:9)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat TestingModuleBuilder.createInstancesOfDependencies (\u001b[22m\u001b[2mnode_modules/@nestjs/testing/testing-module.builder.js\u001b[2m:118:9)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat TestingModuleBuilder.compile (\u001b[22m\u001b[2mnode_modules/@nestjs/testing/testing-module.builder.js\u001b[2m:74:9)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.<anonymous> (\u001b[22m\u001b[2m\u001b[0m\u001b[36mtests/unit/cli/run.command.spec.ts\u001b[39m\u001b[0m\u001b[2m:9:23)\u001b[22m\u001b[2m\u001b[22m\n\n\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1mRunCommand › 실행 옵션 › dry-run 옵션이 있을 때 실제 실행 없이 시뮬레이션해야 함\u001b[39m\u001b[22m\n\n    Nest can't resolve dependencies of the RunCommand (?, WorkflowParserService). Please make sure that the argument ErrorHandlerService at index [0] is available in the RootTestModule context.\n\n    Potential solutions:\n    - Is RootTestModule a valid NestJS module?\n    - If ErrorHandlerService is a provider, is it part of the current RootTestModule?\n    - If ErrorHandlerService is exported from a separate @Module, is that module imported within RootTestModule?\n      @Module({\n        imports: [ /* the Module containing ErrorHandlerService */ ]\n      })\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m  7 |\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m  8 |\u001b[39m   beforeEach(\u001b[36masync\u001b[39m () \u001b[33m=>\u001b[39m {\u001b[22m\n\u001b[2m    \u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m  9 |\u001b[39m     \u001b[36mconst\u001b[39m moduleRef \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m \u001b[33mTest\u001b[39m\u001b[33m.\u001b[39mcreateTestingModule({\u001b[22m\n\u001b[2m     \u001b[90m    |\u001b[39m                       \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 10 |\u001b[39m       providers\u001b[33m:\u001b[39m [\u001b[33mRunCommand\u001b[39m]\u001b[33m,\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 11 |\u001b[39m     })\u001b[33m.\u001b[39mcompile()\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 12 |\u001b[39m     command \u001b[33m=\u001b[39m moduleRef\u001b[33m.\u001b[39m\u001b[36mget\u001b[39m(\u001b[33mRunCommand\u001b[39m)\u001b[33m;\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat TestingInjector.lookupComponentInParentModules (\u001b[22m\u001b[2mnode_modules/@nestjs/core/injector/injector.js\u001b[2m:262:19)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat TestingInjector.resolveComponentInstance (\u001b[22m\u001b[2mnode_modules/@nestjs/core/injector/injector.js\u001b[2m:215:33)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat TestingInjector.resolveComponentInstance (\u001b[22m\u001b[2mnode_modules/@nestjs/testing/testing-injector.js\u001b[2m:19:45)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat resolveParam (\u001b[22m\u001b[2mnode_modules/@nestjs/core/injector/injector.js\u001b[2m:129:38)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m          at async Promise.all (index 0)\u001b[22m\n\u001b[2m      \u001b[2mat TestingInjector.resolveConstructorParams (\u001b[22m\u001b[2mnode_modules/@nestjs/core/injector/injector.js\u001b[2m:144:27)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat TestingInjector.loadInstance (\u001b[22m\u001b[2mnode_modules/@nestjs/core/injector/injector.js\u001b[2m:70:13)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat TestingInjector.loadProvider (\u001b[22m\u001b[2mnode_modules/@nestjs/core/injector/injector.js\u001b[2m:98:9)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat \u001b[22m\u001b[2mnode_modules/@nestjs/core/injector/instance-loader.js\u001b[2m:56:13\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m          at async Promise.all (index 3)\u001b[22m\n\u001b[2m      \u001b[2mat TestingInstanceLoader.createInstancesOfProviders (\u001b[22m\u001b[2mnode_modules/@nestjs/core/injector/instance-loader.js\u001b[2m:55:9)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat \u001b[22m\u001b[2mnode_modules/@nestjs/core/injector/instance-loader.js\u001b[2m:40:13\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m          at async Promise.all (index 1)\u001b[22m\n\u001b[2m      \u001b[2mat TestingInstanceLoader.createInstances (\u001b[22m\u001b[2mnode_modules/@nestjs/core/injector/instance-loader.js\u001b[2m:39:9)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat TestingInstanceLoader.createInstancesOfDependencies (\u001b[22m\u001b[2mnode_modules/@nestjs/core/injector/instance-loader.js\u001b[2m:22:13)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat TestingInstanceLoader.createInstancesOfDependencies (\u001b[22m\u001b[2mnode_modules/@nestjs/testing/testing-instance-loader.js\u001b[2m:9:9)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat TestingModuleBuilder.createInstancesOfDependencies (\u001b[22m\u001b[2mnode_modules/@nestjs/testing/testing-module.builder.js\u001b[2m:118:9)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat TestingModuleBuilder.compile (\u001b[22m\u001b[2mnode_modules/@nestjs/testing/testing-module.builder.js\u001b[2m:74:9)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.<anonymous> (\u001b[22m\u001b[2m\u001b[0m\u001b[36mtests/unit/cli/run.command.spec.ts\u001b[39m\u001b[0m\u001b[2m:9:23)\u001b[22m\u001b[2m\u001b[22m\n\n\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1mRunCommand › 실행 옵션 › verbose 옵션이 있을 때 상세한 로그를 출력해야 함\u001b[39m\u001b[22m\n\n    Nest can't resolve dependencies of the RunCommand (?, WorkflowParserService). Please make sure that the argument ErrorHandlerService at index [0] is available in the RootTestModule context.\n\n    Potential solutions:\n    - Is RootTestModule a valid NestJS module?\n    - If ErrorHandlerService is a provider, is it part of the current RootTestModule?\n    - If ErrorHandlerService is exported from a separate @Module, is that module imported within RootTestModule?\n      @Module({\n        imports: [ /* the Module containing ErrorHandlerService */ ]\n      })\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m  7 |\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m  8 |\u001b[39m   beforeEach(\u001b[36masync\u001b[39m () \u001b[33m=>\u001b[39m {\u001b[22m\n\u001b[2m    \u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m  9 |\u001b[39m     \u001b[36mconst\u001b[39m moduleRef \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m \u001b[33mTest\u001b[39m\u001b[33m.\u001b[39mcreateTestingModule({\u001b[22m\n\u001b[2m     \u001b[90m    |\u001b[39m                       \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 10 |\u001b[39m       providers\u001b[33m:\u001b[39m [\u001b[33mRunCommand\u001b[39m]\u001b[33m,\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 11 |\u001b[39m     })\u001b[33m.\u001b[39mcompile()\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 12 |\u001b[39m     command \u001b[33m=\u001b[39m moduleRef\u001b[33m.\u001b[39m\u001b[36mget\u001b[39m(\u001b[33mRunCommand\u001b[39m)\u001b[33m;\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat TestingInjector.lookupComponentInParentModules (\u001b[22m\u001b[2mnode_modules/@nestjs/core/injector/injector.js\u001b[2m:262:19)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat TestingInjector.resolveComponentInstance (\u001b[22m\u001b[2mnode_modules/@nestjs/core/injector/injector.js\u001b[2m:215:33)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat TestingInjector.resolveComponentInstance (\u001b[22m\u001b[2mnode_modules/@nestjs/testing/testing-injector.js\u001b[2m:19:45)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat resolveParam (\u001b[22m\u001b[2mnode_modules/@nestjs/core/injector/injector.js\u001b[2m:129:38)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m          at async Promise.all (index 0)\u001b[22m\n\u001b[2m      \u001b[2mat TestingInjector.resolveConstructorParams (\u001b[22m\u001b[2mnode_modules/@nestjs/core/injector/injector.js\u001b[2m:144:27)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat TestingInjector.loadInstance (\u001b[22m\u001b[2mnode_modules/@nestjs/core/injector/injector.js\u001b[2m:70:13)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat TestingInjector.loadProvider (\u001b[22m\u001b[2mnode_modules/@nestjs/core/injector/injector.js\u001b[2m:98:9)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat \u001b[22m\u001b[2mnode_modules/@nestjs/core/injector/instance-loader.js\u001b[2m:56:13\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m          at async Promise.all (index 3)\u001b[22m\n\u001b[2m      \u001b[2mat TestingInstanceLoader.createInstancesOfProviders (\u001b[22m\u001b[2mnode_modules/@nestjs/core/injector/instance-loader.js\u001b[2m:55:9)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat \u001b[22m\u001b[2mnode_modules/@nestjs/core/injector/instance-loader.js\u001b[2m:40:13\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m          at async Promise.all (index 1)\u001b[22m\n\u001b[2m      \u001b[2mat TestingInstanceLoader.createInstances (\u001b[22m\u001b[2mnode_modules/@nestjs/core/injector/instance-loader.js\u001b[2m:39:9)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat TestingInstanceLoader.createInstancesOfDependencies (\u001b[22m\u001b[2mnode_modules/@nestjs/core/injector/instance-loader.js\u001b[2m:22:13)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat TestingInstanceLoader.createInstancesOfDependencies (\u001b[22m\u001b[2mnode_modules/@nestjs/testing/testing-instance-loader.js\u001b[2m:9:9)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat TestingModuleBuilder.createInstancesOfDependencies (\u001b[22m\u001b[2mnode_modules/@nestjs/testing/testing-module.builder.js\u001b[2m:118:9)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat TestingModuleBuilder.compile (\u001b[22m\u001b[2mnode_modules/@nestjs/testing/testing-module.builder.js\u001b[2m:74:9)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.<anonymous> (\u001b[22m\u001b[2m\u001b[0m\u001b[36mtests/unit/cli/run.command.spec.ts\u001b[39m\u001b[0m\u001b[2m:9:23)\u001b[22m\u001b[2m\u001b[22m\n\n\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1mRunCommand › 실행 옵션 › timeout 옵션이 있을 때 적절한 시간 제한을 설정해야 함\u001b[39m\u001b[22m\n\n    Nest can't resolve dependencies of the RunCommand (?, WorkflowParserService). Please make sure that the argument ErrorHandlerService at index [0] is available in the RootTestModule context.\n\n    Potential solutions:\n    - Is RootTestModule a valid NestJS module?\n    - If ErrorHandlerService is a provider, is it part of the current RootTestModule?\n    - If ErrorHandlerService is exported from a separate @Module, is that module imported within RootTestModule?\n      @Module({\n        imports: [ /* the Module containing ErrorHandlerService */ ]\n      })\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m  7 |\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m  8 |\u001b[39m   beforeEach(\u001b[36masync\u001b[39m () \u001b[33m=>\u001b[39m {\u001b[22m\n\u001b[2m    \u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m  9 |\u001b[39m     \u001b[36mconst\u001b[39m moduleRef \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m \u001b[33mTest\u001b[39m\u001b[33m.\u001b[39mcreateTestingModule({\u001b[22m\n\u001b[2m     \u001b[90m    |\u001b[39m                       \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 10 |\u001b[39m       providers\u001b[33m:\u001b[39m [\u001b[33mRunCommand\u001b[39m]\u001b[33m,\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 11 |\u001b[39m     })\u001b[33m.\u001b[39mcompile()\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 12 |\u001b[39m     command \u001b[33m=\u001b[39m moduleRef\u001b[33m.\u001b[39m\u001b[36mget\u001b[39m(\u001b[33mRunCommand\u001b[39m)\u001b[33m;\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat TestingInjector.lookupComponentInParentModules (\u001b[22m\u001b[2mnode_modules/@nestjs/core/injector/injector.js\u001b[2m:262:19)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat TestingInjector.resolveComponentInstance (\u001b[22m\u001b[2mnode_modules/@nestjs/core/injector/injector.js\u001b[2m:215:33)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat TestingInjector.resolveComponentInstance (\u001b[22m\u001b[2mnode_modules/@nestjs/testing/testing-injector.js\u001b[2m:19:45)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat resolveParam (\u001b[22m\u001b[2mnode_modules/@nestjs/core/injector/injector.js\u001b[2m:129:38)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m          at async Promise.all (index 0)\u001b[22m\n\u001b[2m      \u001b[2mat TestingInjector.resolveConstructorParams (\u001b[22m\u001b[2mnode_modules/@nestjs/core/injector/injector.js\u001b[2m:144:27)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat TestingInjector.loadInstance (\u001b[22m\u001b[2mnode_modules/@nestjs/core/injector/injector.js\u001b[2m:70:13)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat TestingInjector.loadProvider (\u001b[22m\u001b[2mnode_modules/@nestjs/core/injector/injector.js\u001b[2m:98:9)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat \u001b[22m\u001b[2mnode_modules/@nestjs/core/injector/instance-loader.js\u001b[2m:56:13\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m          at async Promise.all (index 3)\u001b[22m\n\u001b[2m      \u001b[2mat TestingInstanceLoader.createInstancesOfProviders (\u001b[22m\u001b[2mnode_modules/@nestjs/core/injector/instance-loader.js\u001b[2m:55:9)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat \u001b[22m\u001b[2mnode_modules/@nestjs/core/injector/instance-loader.js\u001b[2m:40:13\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m          at async Promise.all (index 1)\u001b[22m\n\u001b[2m      \u001b[2mat TestingInstanceLoader.createInstances (\u001b[22m\u001b[2mnode_modules/@nestjs/core/injector/instance-loader.js\u001b[2m:39:9)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat TestingInstanceLoader.createInstancesOfDependencies (\u001b[22m\u001b[2mnode_modules/@nestjs/core/injector/instance-loader.js\u001b[2m:22:13)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat TestingInstanceLoader.createInstancesOfDependencies (\u001b[22m\u001b[2mnode_modules/@nestjs/testing/testing-instance-loader.js\u001b[2m:9:9)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat TestingModuleBuilder.createInstancesOfDependencies (\u001b[22m\u001b[2mnode_modules/@nestjs/testing/testing-module.builder.js\u001b[2m:118:9)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat TestingModuleBuilder.compile (\u001b[22m\u001b[2mnode_modules/@nestjs/testing/testing-module.builder.js\u001b[2m:74:9)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.<anonymous> (\u001b[22m\u001b[2m\u001b[0m\u001b[36mtests/unit/cli/run.command.spec.ts\u001b[39m\u001b[0m\u001b[2m:9:23)\u001b[22m\u001b[2m\u001b[22m\n\n\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1mRunCommand › 워크플로우 검증 › 워크플로우 파일이 존재하지 않을 때 적절한 에러를 표시해야 함\u001b[39m\u001b[22m\n\n    Nest can't resolve dependencies of the RunCommand (?, WorkflowParserService). Please make sure that the argument ErrorHandlerService at index [0] is available in the RootTestModule context.\n\n    Potential solutions:\n    - Is RootTestModule a valid NestJS module?\n    - If ErrorHandlerService is a provider, is it part of the current RootTestModule?\n    - If ErrorHandlerService is exported from a separate @Module, is that module imported within RootTestModule?\n      @Module({\n        imports: [ /* the Module containing ErrorHandlerService */ ]\n      })\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m  7 |\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m  8 |\u001b[39m   beforeEach(\u001b[36masync\u001b[39m () \u001b[33m=>\u001b[39m {\u001b[22m\n\u001b[2m    \u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m  9 |\u001b[39m     \u001b[36mconst\u001b[39m moduleRef \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m \u001b[33mTest\u001b[39m\u001b[33m.\u001b[39mcreateTestingModule({\u001b[22m\n\u001b[2m     \u001b[90m    |\u001b[39m                       \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 10 |\u001b[39m       providers\u001b[33m:\u001b[39m [\u001b[33mRunCommand\u001b[39m]\u001b[33m,\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 11 |\u001b[39m     })\u001b[33m.\u001b[39mcompile()\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 12 |\u001b[39m     command \u001b[33m=\u001b[39m moduleRef\u001b[33m.\u001b[39m\u001b[36mget\u001b[39m(\u001b[33mRunCommand\u001b[39m)\u001b[33m;\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat TestingInjector.lookupComponentInParentModules (\u001b[22m\u001b[2mnode_modules/@nestjs/core/injector/injector.js\u001b[2m:262:19)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat TestingInjector.resolveComponentInstance (\u001b[22m\u001b[2mnode_modules/@nestjs/core/injector/injector.js\u001b[2m:215:33)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat TestingInjector.resolveComponentInstance (\u001b[22m\u001b[2mnode_modules/@nestjs/testing/testing-injector.js\u001b[2m:19:45)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat resolveParam (\u001b[22m\u001b[2mnode_modules/@nestjs/core/injector/injector.js\u001b[2m:129:38)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m          at async Promise.all (index 0)\u001b[22m\n\u001b[2m      \u001b[2mat TestingInjector.resolveConstructorParams (\u001b[22m\u001b[2mnode_modules/@nestjs/core/injector/injector.js\u001b[2m:144:27)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat TestingInjector.loadInstance (\u001b[22m\u001b[2mnode_modules/@nestjs/core/injector/injector.js\u001b[2m:70:13)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat TestingInjector.loadProvider (\u001b[22m\u001b[2mnode_modules/@nestjs/core/injector/injector.js\u001b[2m:98:9)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat \u001b[22m\u001b[2mnode_modules/@nestjs/core/injector/instance-loader.js\u001b[2m:56:13\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m          at async Promise.all (index 3)\u001b[22m\n\u001b[2m      \u001b[2mat TestingInstanceLoader.createInstancesOfProviders (\u001b[22m\u001b[2mnode_modules/@nestjs/core/injector/instance-loader.js\u001b[2m:55:9)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat \u001b[22m\u001b[2mnode_modules/@nestjs/core/injector/instance-loader.js\u001b[2m:40:13\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m          at async Promise.all (index 1)\u001b[22m\n\u001b[2m      \u001b[2mat TestingInstanceLoader.createInstances (\u001b[22m\u001b[2mnode_modules/@nestjs/core/injector/instance-loader.js\u001b[2m:39:9)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat TestingInstanceLoader.createInstancesOfDependencies (\u001b[22m\u001b[2mnode_modules/@nestjs/core/injector/instance-loader.js\u001b[2m:22:13)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat TestingInstanceLoader.createInstancesOfDependencies (\u001b[22m\u001b[2mnode_modules/@nestjs/testing/testing-instance-loader.js\u001b[2m:9:9)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat TestingModuleBuilder.createInstancesOfDependencies (\u001b[22m\u001b[2mnode_modules/@nestjs/testing/testing-module.builder.js\u001b[2m:118:9)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat TestingModuleBuilder.compile (\u001b[22m\u001b[2mnode_modules/@nestjs/testing/testing-module.builder.js\u001b[2m:74:9)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.<anonymous> (\u001b[22m\u001b[2m\u001b[0m\u001b[36mtests/unit/cli/run.command.spec.ts\u001b[39m\u001b[0m\u001b[2m:9:23)\u001b[22m\u001b[2m\u001b[22m\n\n\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1mRunCommand › 워크플로우 검증 › 워크플로우 파일 형식이 잘못되었을 때 적절한 에러를 표시해야 함\u001b[39m\u001b[22m\n\n    Nest can't resolve dependencies of the RunCommand (?, WorkflowParserService). Please make sure that the argument ErrorHandlerService at index [0] is available in the RootTestModule context.\n\n    Potential solutions:\n    - Is RootTestModule a valid NestJS module?\n    - If ErrorHandlerService is a provider, is it part of the current RootTestModule?\n    - If ErrorHandlerService is exported from a separate @Module, is that module imported within RootTestModule?\n      @Module({\n        imports: [ /* the Module containing ErrorHandlerService */ ]\n      })\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m  7 |\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m  8 |\u001b[39m   beforeEach(\u001b[36masync\u001b[39m () \u001b[33m=>\u001b[39m {\u001b[22m\n\u001b[2m    \u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m  9 |\u001b[39m     \u001b[36mconst\u001b[39m moduleRef \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m \u001b[33mTest\u001b[39m\u001b[33m.\u001b[39mcreateTestingModule({\u001b[22m\n\u001b[2m     \u001b[90m    |\u001b[39m                       \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 10 |\u001b[39m       providers\u001b[33m:\u001b[39m [\u001b[33mRunCommand\u001b[39m]\u001b[33m,\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 11 |\u001b[39m     })\u001b[33m.\u001b[39mcompile()\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 12 |\u001b[39m     command \u001b[33m=\u001b[39m moduleRef\u001b[33m.\u001b[39m\u001b[36mget\u001b[39m(\u001b[33mRunCommand\u001b[39m)\u001b[33m;\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat TestingInjector.lookupComponentInParentModules (\u001b[22m\u001b[2mnode_modules/@nestjs/core/injector/injector.js\u001b[2m:262:19)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat TestingInjector.resolveComponentInstance (\u001b[22m\u001b[2mnode_modules/@nestjs/core/injector/injector.js\u001b[2m:215:33)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat TestingInjector.resolveComponentInstance (\u001b[22m\u001b[2mnode_modules/@nestjs/testing/testing-injector.js\u001b[2m:19:45)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat resolveParam (\u001b[22m\u001b[2mnode_modules/@nestjs/core/injector/injector.js\u001b[2m:129:38)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m          at async Promise.all (index 0)\u001b[22m\n\u001b[2m      \u001b[2mat TestingInjector.resolveConstructorParams (\u001b[22m\u001b[2mnode_modules/@nestjs/core/injector/injector.js\u001b[2m:144:27)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat TestingInjector.loadInstance (\u001b[22m\u001b[2mnode_modules/@nestjs/core/injector/injector.js\u001b[2m:70:13)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat TestingInjector.loadProvider (\u001b[22m\u001b[2mnode_modules/@nestjs/core/injector/injector.js\u001b[2m:98:9)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat \u001b[22m\u001b[2mnode_modules/@nestjs/core/injector/instance-loader.js\u001b[2m:56:13\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m          at async Promise.all (index 3)\u001b[22m\n\u001b[2m      \u001b[2mat TestingInstanceLoader.createInstancesOfProviders (\u001b[22m\u001b[2mnode_modules/@nestjs/core/injector/instance-loader.js\u001b[2m:55:9)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat \u001b[22m\u001b[2mnode_modules/@nestjs/core/injector/instance-loader.js\u001b[2m:40:13\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m          at async Promise.all (index 1)\u001b[22m\n\u001b[2m      \u001b[2mat TestingInstanceLoader.createInstances (\u001b[22m\u001b[2mnode_modules/@nestjs/core/injector/instance-loader.js\u001b[2m:39:9)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat TestingInstanceLoader.createInstancesOfDependencies (\u001b[22m\u001b[2mnode_modules/@nestjs/core/injector/instance-loader.js\u001b[2m:22:13)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat TestingInstanceLoader.createInstancesOfDependencies (\u001b[22m\u001b[2mnode_modules/@nestjs/testing/testing-instance-loader.js\u001b[2m:9:9)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat TestingModuleBuilder.createInstancesOfDependencies (\u001b[22m\u001b[2mnode_modules/@nestjs/testing/testing-module.builder.js\u001b[2m:118:9)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat TestingModuleBuilder.compile (\u001b[22m\u001b[2mnode_modules/@nestjs/testing/testing-module.builder.js\u001b[2m:74:9)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.<anonymous> (\u001b[22m\u001b[2m\u001b[0m\u001b[36mtests/unit/cli/run.command.spec.ts\u001b[39m\u001b[0m\u001b[2m:9:23)\u001b[22m\u001b[2m\u001b[22m\n\n\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1mRunCommand › 실행 상태 › 워크플로우 실행 상태를 적절히 표시해야 함\u001b[39m\u001b[22m\n\n    Nest can't resolve dependencies of the RunCommand (?, WorkflowParserService). Please make sure that the argument ErrorHandlerService at index [0] is available in the RootTestModule context.\n\n    Potential solutions:\n    - Is RootTestModule a valid NestJS module?\n    - If ErrorHandlerService is a provider, is it part of the current RootTestModule?\n    - If ErrorHandlerService is exported from a separate @Module, is that module imported within RootTestModule?\n      @Module({\n        imports: [ /* the Module containing ErrorHandlerService */ ]\n      })\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m  7 |\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m  8 |\u001b[39m   beforeEach(\u001b[36masync\u001b[39m () \u001b[33m=>\u001b[39m {\u001b[22m\n\u001b[2m    \u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m  9 |\u001b[39m     \u001b[36mconst\u001b[39m moduleRef \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m \u001b[33mTest\u001b[39m\u001b[33m.\u001b[39mcreateTestingModule({\u001b[22m\n\u001b[2m     \u001b[90m    |\u001b[39m                       \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 10 |\u001b[39m       providers\u001b[33m:\u001b[39m [\u001b[33mRunCommand\u001b[39m]\u001b[33m,\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 11 |\u001b[39m     })\u001b[33m.\u001b[39mcompile()\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 12 |\u001b[39m     command \u001b[33m=\u001b[39m moduleRef\u001b[33m.\u001b[39m\u001b[36mget\u001b[39m(\u001b[33mRunCommand\u001b[39m)\u001b[33m;\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat TestingInjector.lookupComponentInParentModules (\u001b[22m\u001b[2mnode_modules/@nestjs/core/injector/injector.js\u001b[2m:262:19)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat TestingInjector.resolveComponentInstance (\u001b[22m\u001b[2mnode_modules/@nestjs/core/injector/injector.js\u001b[2m:215:33)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat TestingInjector.resolveComponentInstance (\u001b[22m\u001b[2mnode_modules/@nestjs/testing/testing-injector.js\u001b[2m:19:45)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat resolveParam (\u001b[22m\u001b[2mnode_modules/@nestjs/core/injector/injector.js\u001b[2m:129:38)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m          at async Promise.all (index 0)\u001b[22m\n\u001b[2m      \u001b[2mat TestingInjector.resolveConstructorParams (\u001b[22m\u001b[2mnode_modules/@nestjs/core/injector/injector.js\u001b[2m:144:27)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat TestingInjector.loadInstance (\u001b[22m\u001b[2mnode_modules/@nestjs/core/injector/injector.js\u001b[2m:70:13)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat TestingInjector.loadProvider (\u001b[22m\u001b[2mnode_modules/@nestjs/core/injector/injector.js\u001b[2m:98:9)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat \u001b[22m\u001b[2mnode_modules/@nestjs/core/injector/instance-loader.js\u001b[2m:56:13\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m          at async Promise.all (index 3)\u001b[22m\n\u001b[2m      \u001b[2mat TestingInstanceLoader.createInstancesOfProviders (\u001b[22m\u001b[2mnode_modules/@nestjs/core/injector/instance-loader.js\u001b[2m:55:9)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat \u001b[22m\u001b[2mnode_modules/@nestjs/core/injector/instance-loader.js\u001b[2m:40:13\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m          at async Promise.all (index 1)\u001b[22m\n\u001b[2m      \u001b[2mat TestingInstanceLoader.createInstances (\u001b[22m\u001b[2mnode_modules/@nestjs/core/injector/instance-loader.js\u001b[2m:39:9)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat TestingInstanceLoader.createInstancesOfDependencies (\u001b[22m\u001b[2mnode_modules/@nestjs/core/injector/instance-loader.js\u001b[2m:22:13)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat TestingInstanceLoader.createInstancesOfDependencies (\u001b[22m\u001b[2mnode_modules/@nestjs/testing/testing-instance-loader.js\u001b[2m:9:9)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat TestingModuleBuilder.createInstancesOfDependencies (\u001b[22m\u001b[2mnode_modules/@nestjs/testing/testing-module.builder.js\u001b[2m:118:9)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat TestingModuleBuilder.compile (\u001b[22m\u001b[2mnode_modules/@nestjs/testing/testing-module.builder.js\u001b[2m:74:9)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.<anonymous> (\u001b[22m\u001b[2m\u001b[0m\u001b[36mtests/unit/cli/run.command.spec.ts\u001b[39m\u001b[0m\u001b[2m:9:23)\u001b[22m\u001b[2m\u001b[22m\n\n\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1mRunCommand › 실행 상태 › 실행 완료 시 적절한 완료 메시지를 표시해야 함\u001b[39m\u001b[22m\n\n    Nest can't resolve dependencies of the RunCommand (?, WorkflowParserService). Please make sure that the argument ErrorHandlerService at index [0] is available in the RootTestModule context.\n\n    Potential solutions:\n    - Is RootTestModule a valid NestJS module?\n    - If ErrorHandlerService is a provider, is it part of the current RootTestModule?\n    - If ErrorHandlerService is exported from a separate @Module, is that module imported within RootTestModule?\n      @Module({\n        imports: [ /* the Module containing ErrorHandlerService */ ]\n      })\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m  7 |\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m  8 |\u001b[39m   beforeEach(\u001b[36masync\u001b[39m () \u001b[33m=>\u001b[39m {\u001b[22m\n\u001b[2m    \u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m  9 |\u001b[39m     \u001b[36mconst\u001b[39m moduleRef \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m \u001b[33mTest\u001b[39m\u001b[33m.\u001b[39mcreateTestingModule({\u001b[22m\n\u001b[2m     \u001b[90m    |\u001b[39m                       \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 10 |\u001b[39m       providers\u001b[33m:\u001b[39m [\u001b[33mRunCommand\u001b[39m]\u001b[33m,\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 11 |\u001b[39m     })\u001b[33m.\u001b[39mcompile()\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 12 |\u001b[39m     command \u001b[33m=\u001b[39m moduleRef\u001b[33m.\u001b[39m\u001b[36mget\u001b[39m(\u001b[33mRunCommand\u001b[39m)\u001b[33m;\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat TestingInjector.lookupComponentInParentModules (\u001b[22m\u001b[2mnode_modules/@nestjs/core/injector/injector.js\u001b[2m:262:19)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat TestingInjector.resolveComponentInstance (\u001b[22m\u001b[2mnode_modules/@nestjs/core/injector/injector.js\u001b[2m:215:33)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat TestingInjector.resolveComponentInstance (\u001b[22m\u001b[2mnode_modules/@nestjs/testing/testing-injector.js\u001b[2m:19:45)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat resolveParam (\u001b[22m\u001b[2mnode_modules/@nestjs/core/injector/injector.js\u001b[2m:129:38)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m          at async Promise.all (index 0)\u001b[22m\n\u001b[2m      \u001b[2mat TestingInjector.resolveConstructorParams (\u001b[22m\u001b[2mnode_modules/@nestjs/core/injector/injector.js\u001b[2m:144:27)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat TestingInjector.loadInstance (\u001b[22m\u001b[2mnode_modules/@nestjs/core/injector/injector.js\u001b[2m:70:13)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat TestingInjector.loadProvider (\u001b[22m\u001b[2mnode_modules/@nestjs/core/injector/injector.js\u001b[2m:98:9)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat \u001b[22m\u001b[2mnode_modules/@nestjs/core/injector/instance-loader.js\u001b[2m:56:13\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m          at async Promise.all (index 3)\u001b[22m\n\u001b[2m      \u001b[2mat TestingInstanceLoader.createInstancesOfProviders (\u001b[22m\u001b[2mnode_modules/@nestjs/core/injector/instance-loader.js\u001b[2m:55:9)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat \u001b[22m\u001b[2mnode_modules/@nestjs/core/injector/instance-loader.js\u001b[2m:40:13\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m          at async Promise.all (index 1)\u001b[22m\n\u001b[2m      \u001b[2mat TestingInstanceLoader.createInstances (\u001b[22m\u001b[2mnode_modules/@nestjs/core/injector/instance-loader.js\u001b[2m:39:9)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat TestingInstanceLoader.createInstancesOfDependencies (\u001b[22m\u001b[2mnode_modules/@nestjs/core/injector/instance-loader.js\u001b[2m:22:13)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat TestingInstanceLoader.createInstancesOfDependencies (\u001b[22m\u001b[2mnode_modules/@nestjs/testing/testing-instance-loader.js\u001b[2m:9:9)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat TestingModuleBuilder.createInstancesOfDependencies (\u001b[22m\u001b[2mnode_modules/@nestjs/testing/testing-module.builder.js\u001b[2m:118:9)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat TestingModuleBuilder.compile (\u001b[22m\u001b[2mnode_modules/@nestjs/testing/testing-module.builder.js\u001b[2m:74:9)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.<anonymous> (\u001b[22m\u001b[2m\u001b[0m\u001b[36mtests/unit/cli/run.command.spec.ts\u001b[39m\u001b[0m\u001b[2m:9:23)\u001b[22m\u001b[2m\u001b[22m\n\n\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1mRunCommand › 에러 처리 › 워크플로우 실행 중 에러가 발생해도 적절히 처리되어야 함\u001b[39m\u001b[22m\n\n    Nest can't resolve dependencies of the RunCommand (?, WorkflowParserService). Please make sure that the argument ErrorHandlerService at index [0] is available in the RootTestModule context.\n\n    Potential solutions:\n    - Is RootTestModule a valid NestJS module?\n    - If ErrorHandlerService is a provider, is it part of the current RootTestModule?\n    - If ErrorHandlerService is exported from a separate @Module, is that module imported within RootTestModule?\n      @Module({\n        imports: [ /* the Module containing ErrorHandlerService */ ]\n      })\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m  7 |\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m  8 |\u001b[39m   beforeEach(\u001b[36masync\u001b[39m () \u001b[33m=>\u001b[39m {\u001b[22m\n\u001b[2m    \u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m  9 |\u001b[39m     \u001b[36mconst\u001b[39m moduleRef \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m \u001b[33mTest\u001b[39m\u001b[33m.\u001b[39mcreateTestingModule({\u001b[22m\n\u001b[2m     \u001b[90m    |\u001b[39m                       \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 10 |\u001b[39m       providers\u001b[33m:\u001b[39m [\u001b[33mRunCommand\u001b[39m]\u001b[33m,\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 11 |\u001b[39m     })\u001b[33m.\u001b[39mcompile()\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 12 |\u001b[39m     command \u001b[33m=\u001b[39m moduleRef\u001b[33m.\u001b[39m\u001b[36mget\u001b[39m(\u001b[33mRunCommand\u001b[39m)\u001b[33m;\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat TestingInjector.lookupComponentInParentModules (\u001b[22m\u001b[2mnode_modules/@nestjs/core/injector/injector.js\u001b[2m:262:19)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat TestingInjector.resolveComponentInstance (\u001b[22m\u001b[2mnode_modules/@nestjs/core/injector/injector.js\u001b[2m:215:33)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat TestingInjector.resolveComponentInstance (\u001b[22m\u001b[2mnode_modules/@nestjs/testing/testing-injector.js\u001b[2m:19:45)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat resolveParam (\u001b[22m\u001b[2mnode_modules/@nestjs/core/injector/injector.js\u001b[2m:129:38)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m          at async Promise.all (index 0)\u001b[22m\n\u001b[2m      \u001b[2mat TestingInjector.resolveConstructorParams (\u001b[22m\u001b[2mnode_modules/@nestjs/core/injector/injector.js\u001b[2m:144:27)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat TestingInjector.loadInstance (\u001b[22m\u001b[2mnode_modules/@nestjs/core/injector/injector.js\u001b[2m:70:13)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat TestingInjector.loadProvider (\u001b[22m\u001b[2mnode_modules/@nestjs/core/injector/injector.js\u001b[2m:98:9)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat \u001b[22m\u001b[2mnode_modules/@nestjs/core/injector/instance-loader.js\u001b[2m:56:13\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m          at async Promise.all (index 3)\u001b[22m\n\u001b[2m      \u001b[2mat TestingInstanceLoader.createInstancesOfProviders (\u001b[22m\u001b[2mnode_modules/@nestjs/core/injector/instance-loader.js\u001b[2m:55:9)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat \u001b[22m\u001b[2mnode_modules/@nestjs/core/injector/instance-loader.js\u001b[2m:40:13\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m          at async Promise.all (index 1)\u001b[22m\n\u001b[2m      \u001b[2mat TestingInstanceLoader.createInstances (\u001b[22m\u001b[2mnode_modules/@nestjs/core/injector/instance-loader.js\u001b[2m:39:9)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat TestingInstanceLoader.createInstancesOfDependencies (\u001b[22m\u001b[2mnode_modules/@nestjs/core/injector/instance-loader.js\u001b[2m:22:13)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat TestingInstanceLoader.createInstancesOfDependencies (\u001b[22m\u001b[2mnode_modules/@nestjs/testing/testing-instance-loader.js\u001b[2m:9:9)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat TestingModuleBuilder.createInstancesOfDependencies (\u001b[22m\u001b[2mnode_modules/@nestjs/testing/testing-module.builder.js\u001b[2m:118:9)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat TestingModuleBuilder.compile (\u001b[22m\u001b[2mnode_modules/@nestjs/testing/testing-module.builder.js\u001b[2m:74:9)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.<anonymous> (\u001b[22m\u001b[2m\u001b[0m\u001b[36mtests/unit/cli/run.command.spec.ts\u001b[39m\u001b[0m\u001b[2m:9:23)\u001b[22m\u001b[2m\u001b[22m\n","name":"/Users/bernocrest/Desktop/dev/projects/claude-auto-worker/tests/unit/cli/run.command.spec.ts","startTime":1755591225930,"status":"failed","summary":""},{"assertionResults":[{"ancestorTitles":["CliModule","모듈 구성"],"duration":9,"failureDetails":[],"failureMessages":[],"fullName":"CliModule 모듈 구성 모듈이 성공적으로 생성되어야 함","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"모듈이 성공적으로 생성되어야 함"},{"ancestorTitles":["CliModule","모듈 구성"],"duration":5,"failureDetails":[],"failureMessages":[],"fullName":"CliModule 모듈 구성 모든 CLI 명령어가 등록되어야 함","invocations":1,"location":null,"numPassingAsserts":5,"retryReasons":[],"status":"passed","title":"모든 CLI 명령어가 등록되어야 함"},{"ancestorTitles":["CliModule","모듈 구성"],"duration":5,"failureDetails":[],"failureMessages":[],"fullName":"CliModule 모듈 구성 에러 핸들러 서비스가 등록되어야 함","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"에러 핸들러 서비스가 등록되어야 함"},{"ancestorTitles":["CliModule","의존성 주입"],"duration":4,"failureDetails":[],"failureMessages":[],"fullName":"CliModule 의존성 주입 모든 명령어가 필요한 의존성을 주입받아야 함","invocations":1,"location":null,"numPassingAsserts":5,"retryReasons":[],"status":"passed","title":"모든 명령어가 필요한 의존성을 주입받아야 함"},{"ancestorTitles":["CliModule","모듈 초기화"],"duration":8,"failureDetails":[],"failureMessages":[],"fullName":"CliModule 모듈 초기화 모듈 초기화 시 에러가 발생하지 않아야 함","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"모듈 초기화 시 에러가 발생하지 않아야 함"}],"endTime":1755591229023,"message":"","name":"/Users/bernocrest/Desktop/dev/projects/claude-auto-worker/tests/unit/cli/cli.module.spec.ts","startTime":1755591225931,"status":"passed","summary":""},{"assertionResults":[{"ancestorTitles":["ConfigCommand","show 명령어"],"duration":7,"failureDetails":[{}],"failureMessages":["TypeError: command.run is not a function\n    at Object.<anonymous> (/Users/bernocrest/Desktop/dev/projects/claude-auto-worker/tests/unit/cli/config.command.spec.ts:23:23)\n    at Promise.then.completed (/Users/bernocrest/Desktop/dev/projects/claude-auto-worker/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/Users/bernocrest/Desktop/dev/projects/claude-auto-worker/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/Users/bernocrest/Desktop/dev/projects/claude-auto-worker/node_modules/jest-circus/build/run.js:316:40)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at _runTest (/Users/bernocrest/Desktop/dev/projects/claude-auto-worker/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/Users/bernocrest/Desktop/dev/projects/claude-auto-worker/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/Users/bernocrest/Desktop/dev/projects/claude-auto-worker/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/Users/bernocrest/Desktop/dev/projects/claude-auto-worker/node_modules/jest-circus/build/run.js:121:9)\n    at run (/Users/bernocrest/Desktop/dev/projects/claude-auto-worker/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/Users/bernocrest/Desktop/dev/projects/claude-auto-worker/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/Users/bernocrest/Desktop/dev/projects/claude-auto-worker/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/Users/bernocrest/Desktop/dev/projects/claude-auto-worker/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/Users/bernocrest/Desktop/dev/projects/claude-auto-worker/node_modules/jest-runner/build/runTest.js:444:34)\n    at Object.worker (/Users/bernocrest/Desktop/dev/projects/claude-auto-worker/node_modules/jest-runner/build/testWorker.js:106:12)"],"fullName":"ConfigCommand show 명령어 설정을 표시할 때 에러가 발생하지 않아야 함","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"설정을 표시할 때 에러가 발생하지 않아야 함"},{"ancestorTitles":["ConfigCommand","show 명령어"],"duration":2,"failureDetails":[{}],"failureMessages":["TypeError: command.run is not a function\n    at Object.<anonymous> (/Users/bernocrest/Desktop/dev/projects/claude-auto-worker/tests/unit/cli/config.command.spec.ts:34:23)\n    at Promise.then.completed (/Users/bernocrest/Desktop/dev/projects/claude-auto-worker/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/Users/bernocrest/Desktop/dev/projects/claude-auto-worker/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/Users/bernocrest/Desktop/dev/projects/claude-auto-worker/node_modules/jest-circus/build/run.js:316:40)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at _runTest (/Users/bernocrest/Desktop/dev/projects/claude-auto-worker/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/Users/bernocrest/Desktop/dev/projects/claude-auto-worker/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/Users/bernocrest/Desktop/dev/projects/claude-auto-worker/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/Users/bernocrest/Desktop/dev/projects/claude-auto-worker/node_modules/jest-circus/build/run.js:121:9)\n    at run (/Users/bernocrest/Desktop/dev/projects/claude-auto-worker/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/Users/bernocrest/Desktop/dev/projects/claude-auto-worker/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/Users/bernocrest/Desktop/dev/projects/claude-auto-worker/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/Users/bernocrest/Desktop/dev/projects/claude-auto-worker/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/Users/bernocrest/Desktop/dev/projects/claude-auto-worker/node_modules/jest-runner/build/runTest.js:444:34)\n    at Object.worker (/Users/bernocrest/Desktop/dev/projects/claude-auto-worker/node_modules/jest-runner/build/testWorker.js:106:12)"],"fullName":"ConfigCommand show 명령어 show 명령어 실행 시 적절한 메시지가 출력되어야 함","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"show 명령어 실행 시 적절한 메시지가 출력되어야 함"},{"ancestorTitles":["ConfigCommand","path 명령어"],"duration":2,"failureDetails":[{}],"failureMessages":["TypeError: command.run is not a function\n    at Object.<anonymous> (/Users/bernocrest/Desktop/dev/projects/claude-auto-worker/tests/unit/cli/config.command.spec.ts:48:23)\n    at Promise.then.completed (/Users/bernocrest/Desktop/dev/projects/claude-auto-worker/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/Users/bernocrest/Desktop/dev/projects/claude-auto-worker/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/Users/bernocrest/Desktop/dev/projects/claude-auto-worker/node_modules/jest-circus/build/run.js:316:40)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at _runTest (/Users/bernocrest/Desktop/dev/projects/claude-auto-worker/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/Users/bernocrest/Desktop/dev/projects/claude-auto-worker/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/Users/bernocrest/Desktop/dev/projects/claude-auto-worker/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/Users/bernocrest/Desktop/dev/projects/claude-auto-worker/node_modules/jest-circus/build/run.js:121:9)\n    at run (/Users/bernocrest/Desktop/dev/projects/claude-auto-worker/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/Users/bernocrest/Desktop/dev/projects/claude-auto-worker/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/Users/bernocrest/Desktop/dev/projects/claude-auto-worker/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/Users/bernocrest/Desktop/dev/projects/claude-auto-worker/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/Users/bernocrest/Desktop/dev/projects/claude-auto-worker/node_modules/jest-runner/build/runTest.js:444:34)\n    at Object.worker (/Users/bernocrest/Desktop/dev/projects/claude-auto-worker/node_modules/jest-runner/build/testWorker.js:106:12)"],"fullName":"ConfigCommand path 명령어 경로가 사용 가능할 때 경로를 출력해야 함","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"경로가 사용 가능할 때 경로를 출력해야 함"},{"ancestorTitles":["ConfigCommand","path 명령어"],"duration":1,"failureDetails":[{}],"failureMessages":["TypeError: command.run is not a function\n    at Object.<anonymous> (/Users/bernocrest/Desktop/dev/projects/claude-auto-worker/tests/unit/cli/config.command.spec.ts:60:23)\n    at Promise.then.completed (/Users/bernocrest/Desktop/dev/projects/claude-auto-worker/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/Users/bernocrest/Desktop/dev/projects/claude-auto-worker/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/Users/bernocrest/Desktop/dev/projects/claude-auto-worker/node_modules/jest-circus/build/run.js:316:40)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at _runTest (/Users/bernocrest/Desktop/dev/projects/claude-auto-worker/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/Users/bernocrest/Desktop/dev/projects/claude-auto-worker/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/Users/bernocrest/Desktop/dev/projects/claude-auto-worker/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/Users/bernocrest/Desktop/dev/projects/claude-auto-worker/node_modules/jest-circus/build/run.js:121:9)\n    at run (/Users/bernocrest/Desktop/dev/projects/claude-auto-worker/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/Users/bernocrest/Desktop/dev/projects/claude-auto-worker/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/Users/bernocrest/Desktop/dev/projects/claude-auto-worker/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/Users/bernocrest/Desktop/dev/projects/claude-auto-worker/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/Users/bernocrest/Desktop/dev/projects/claude-auto-worker/node_modules/jest-runner/build/runTest.js:444:34)\n    at Object.worker (/Users/bernocrest/Desktop/dev/projects/claude-auto-worker/node_modules/jest-runner/build/testWorker.js:106:12)"],"fullName":"ConfigCommand path 명령어 경로가 없을 때 적절한 메시지를 출력해야 함","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"경로가 없을 때 적절한 메시지를 출력해야 함"},{"ancestorTitles":["ConfigCommand","init 명령어"],"duration":1,"failureDetails":[{}],"failureMessages":["TypeError: command.run is not a function\n    at Object.<anonymous> (/Users/bernocrest/Desktop/dev/projects/claude-auto-worker/tests/unit/cli/config.command.spec.ts:74:23)\n    at Promise.then.completed (/Users/bernocrest/Desktop/dev/projects/claude-auto-worker/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/Users/bernocrest/Desktop/dev/projects/claude-auto-worker/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/Users/bernocrest/Desktop/dev/projects/claude-auto-worker/node_modules/jest-circus/build/run.js:316:40)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at _runTest (/Users/bernocrest/Desktop/dev/projects/claude-auto-worker/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/Users/bernocrest/Desktop/dev/projects/claude-auto-worker/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/Users/bernocrest/Desktop/dev/projects/claude-auto-worker/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/Users/bernocrest/Desktop/dev/projects/claude-auto-worker/node_modules/jest-circus/build/run.js:121:9)\n    at run (/Users/bernocrest/Desktop/dev/projects/claude-auto-worker/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/Users/bernocrest/Desktop/dev/projects/claude-auto-worker/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/Users/bernocrest/Desktop/dev/projects/claude-auto-worker/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/Users/bernocrest/Desktop/dev/projects/claude-auto-worker/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/Users/bernocrest/Desktop/dev/projects/claude-auto-worker/node_modules/jest-runner/build/runTest.js:444:34)\n    at Object.worker (/Users/bernocrest/Desktop/dev/projects/claude-auto-worker/node_modules/jest-runner/build/testWorker.js:106:12)"],"fullName":"ConfigCommand init 명령어 템플릿 초기화가 성공적으로 완료되어야 함","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"템플릿 초기화가 성공적으로 완료되어야 함"},{"ancestorTitles":["ConfigCommand","init 명령어"],"duration":2,"failureDetails":[{}],"failureMessages":["TypeError: command.run is not a function\n    at Object.<anonymous> (/Users/bernocrest/Desktop/dev/projects/claude-auto-worker/tests/unit/cli/config.command.spec.ts:85:23)\n    at Promise.then.completed (/Users/bernocrest/Desktop/dev/projects/claude-auto-worker/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/Users/bernocrest/Desktop/dev/projects/claude-auto-worker/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/Users/bernocrest/Desktop/dev/projects/claude-auto-worker/node_modules/jest-circus/build/run.js:316:40)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at _runTest (/Users/bernocrest/Desktop/dev/projects/claude-auto-worker/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/Users/bernocrest/Desktop/dev/projects/claude-auto-worker/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/Users/bernocrest/Desktop/dev/projects/claude-auto-worker/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/Users/bernocrest/Desktop/dev/projects/claude-auto-worker/node_modules/jest-circus/build/run.js:121:9)\n    at run (/Users/bernocrest/Desktop/dev/projects/claude-auto-worker/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/Users/bernocrest/Desktop/dev/projects/claude-auto-worker/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/Users/bernocrest/Desktop/dev/projects/claude-auto-worker/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/Users/bernocrest/Desktop/dev/projects/claude-auto-worker/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/Users/bernocrest/Desktop/dev/projects/claude-auto-worker/node_modules/jest-runner/build/runTest.js:444:34)\n    at Object.worker (/Users/bernocrest/Desktop/dev/projects/claude-auto-worker/node_modules/jest-runner/build/testWorker.js:106:12)"],"fullName":"ConfigCommand init 명령어 force 옵션이 없을 때 확인 메시지를 출력해야 함","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"force 옵션이 없을 때 확인 메시지를 출력해야 함"},{"ancestorTitles":["ConfigCommand","에러 처리"],"duration":3,"failureDetails":[],"failureMessages":[],"fullName":"ConfigCommand 에러 처리 서비스 에러 발생 시 적절히 처리되어야 함","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"서비스 에러 발생 시 적절히 처리되어야 함"},{"ancestorTitles":["ConfigCommand","명령어 옵션"],"duration":1,"failureDetails":[{}],"failureMessages":["TypeError: command.run is not a function\n    at Object.<anonymous> (/Users/bernocrest/Desktop/dev/projects/claude-auto-worker/tests/unit/cli/config.command.spec.ts:117:23)\n    at Promise.then.completed (/Users/bernocrest/Desktop/dev/projects/claude-auto-worker/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/Users/bernocrest/Desktop/dev/projects/claude-auto-worker/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/Users/bernocrest/Desktop/dev/projects/claude-auto-worker/node_modules/jest-circus/build/run.js:316:40)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at _runTest (/Users/bernocrest/Desktop/dev/projects/claude-auto-worker/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/Users/bernocrest/Desktop/dev/projects/claude-auto-worker/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/Users/bernocrest/Desktop/dev/projects/claude-auto-worker/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/Users/bernocrest/Desktop/dev/projects/claude-auto-worker/node_modules/jest-circus/build/run.js:121:9)\n    at run (/Users/bernocrest/Desktop/dev/projects/claude-auto-worker/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/Users/bernocrest/Desktop/dev/projects/claude-auto-worker/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/Users/bernocrest/Desktop/dev/projects/claude-auto-worker/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/Users/bernocrest/Desktop/dev/projects/claude-auto-worker/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/Users/bernocrest/Desktop/dev/projects/claude-auto-worker/node_modules/jest-runner/build/runTest.js:444:34)\n    at Object.worker (/Users/bernocrest/Desktop/dev/projects/claude-auto-worker/node_modules/jest-runner/build/testWorker.js:106:12)"],"fullName":"ConfigCommand 명령어 옵션 알 수 없는 명령어에 대해 적절한 메시지를 출력해야 함","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"알 수 없는 명령어에 대해 적절한 메시지를 출력해야 함"}],"endTime":1755591229023,"message":"\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1mConfigCommand › show 명령어 › 설정을 표시할 때 에러가 발생하지 않아야 함\u001b[39m\u001b[22m\n\n    TypeError: command.run is not a function\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 21 |\u001b[39m       \u001b[22m\n\u001b[2m     \u001b[90m 22 |\u001b[39m       \u001b[36mtry\u001b[39m {\u001b[22m\n\u001b[2m    \u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 23 |\u001b[39m         \u001b[36mawait\u001b[39m command\u001b[33m.\u001b[39mrun([\u001b[32m'show'\u001b[39m]\u001b[33m,\u001b[39m {})\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m    |\u001b[39m                       \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 24 |\u001b[39m         expect(outputs\u001b[33m.\u001b[39msome(o \u001b[33m=>\u001b[39m o\u001b[33m.\u001b[39mtype \u001b[33m===\u001b[39m \u001b[32m'log'\u001b[39m))\u001b[33m.\u001b[39mtoBe(\u001b[36mtrue\u001b[39m)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 25 |\u001b[39m       } \u001b[36mfinally\u001b[39m {\u001b[22m\n\u001b[2m     \u001b[90m 26 |\u001b[39m         restore()\u001b[33m;\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.<anonymous> (\u001b[22m\u001b[2m\u001b[0m\u001b[36mtests/unit/cli/config.command.spec.ts\u001b[39m\u001b[0m\u001b[2m:23:23)\u001b[22m\u001b[2m\u001b[22m\n\n\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1mConfigCommand › show 명령어 › show 명령어 실행 시 적절한 메시지가 출력되어야 함\u001b[39m\u001b[22m\n\n    TypeError: command.run is not a function\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 32 |\u001b[39m       \u001b[22m\n\u001b[2m     \u001b[90m 33 |\u001b[39m       \u001b[36mtry\u001b[39m {\u001b[22m\n\u001b[2m    \u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 34 |\u001b[39m         \u001b[36mawait\u001b[39m command\u001b[33m.\u001b[39mrun([\u001b[32m'show'\u001b[39m]\u001b[33m,\u001b[39m {})\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m    |\u001b[39m                       \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 35 |\u001b[39m         expect(spy)\u001b[33m.\u001b[39mtoHaveBeenCalled()\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 36 |\u001b[39m       } \u001b[36mfinally\u001b[39m {\u001b[22m\n\u001b[2m     \u001b[90m 37 |\u001b[39m         spy\u001b[33m.\u001b[39mmockRestore()\u001b[33m;\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.<anonymous> (\u001b[22m\u001b[2m\u001b[0m\u001b[36mtests/unit/cli/config.command.spec.ts\u001b[39m\u001b[0m\u001b[2m:34:23)\u001b[22m\u001b[2m\u001b[22m\n\n\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1mConfigCommand › path 명령어 › 경로가 사용 가능할 때 경로를 출력해야 함\u001b[39m\u001b[22m\n\n    TypeError: command.run is not a function\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 46 |\u001b[39m       \u001b[22m\n\u001b[2m     \u001b[90m 47 |\u001b[39m       \u001b[36mtry\u001b[39m {\u001b[22m\n\u001b[2m    \u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 48 |\u001b[39m         \u001b[36mawait\u001b[39m command\u001b[33m.\u001b[39mrun([\u001b[32m'path'\u001b[39m]\u001b[33m,\u001b[39m {})\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m    |\u001b[39m                       \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 49 |\u001b[39m         expect(outputs\u001b[33m.\u001b[39msome(o \u001b[33m=>\u001b[39m o\u001b[33m.\u001b[39mmessage\u001b[33m.\u001b[39mincludes(\u001b[32m'/tmp/claude.yaml'\u001b[39m)))\u001b[33m.\u001b[39mtoBe(\u001b[36mtrue\u001b[39m)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 50 |\u001b[39m       } \u001b[36mfinally\u001b[39m {\u001b[22m\n\u001b[2m     \u001b[90m 51 |\u001b[39m         restore()\u001b[33m;\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.<anonymous> (\u001b[22m\u001b[2m\u001b[0m\u001b[36mtests/unit/cli/config.command.spec.ts\u001b[39m\u001b[0m\u001b[2m:48:23)\u001b[22m\u001b[2m\u001b[22m\n\n\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1mConfigCommand › path 명령어 › 경로가 없을 때 적절한 메시지를 출력해야 함\u001b[39m\u001b[22m\n\n    TypeError: command.run is not a function\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 58 |\u001b[39m       \u001b[22m\n\u001b[2m     \u001b[90m 59 |\u001b[39m       \u001b[36mtry\u001b[39m {\u001b[22m\n\u001b[2m    \u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 60 |\u001b[39m         \u001b[36mawait\u001b[39m command\u001b[33m.\u001b[39mrun([\u001b[32m'path'\u001b[39m]\u001b[33m,\u001b[39m {})\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m    |\u001b[39m                       \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 61 |\u001b[39m         expect(outputs\u001b[33m.\u001b[39msome(o \u001b[33m=>\u001b[39m o\u001b[33m.\u001b[39mtype \u001b[33m===\u001b[39m \u001b[32m'log'\u001b[39m))\u001b[33m.\u001b[39mtoBe(\u001b[36mtrue\u001b[39m)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 62 |\u001b[39m       } \u001b[36mfinally\u001b[39m {\u001b[22m\n\u001b[2m     \u001b[90m 63 |\u001b[39m         restore()\u001b[33m;\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.<anonymous> (\u001b[22m\u001b[2m\u001b[0m\u001b[36mtests/unit/cli/config.command.spec.ts\u001b[39m\u001b[0m\u001b[2m:60:23)\u001b[22m\u001b[2m\u001b[22m\n\n\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1mConfigCommand › init 명령어 › 템플릿 초기화가 성공적으로 완료되어야 함\u001b[39m\u001b[22m\n\n    TypeError: command.run is not a function\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 72 |\u001b[39m       \u001b[22m\n\u001b[2m     \u001b[90m 73 |\u001b[39m       \u001b[36mtry\u001b[39m {\u001b[22m\n\u001b[2m    \u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 74 |\u001b[39m         \u001b[36mawait\u001b[39m command\u001b[33m.\u001b[39mrun([\u001b[32m'init'\u001b[39m]\u001b[33m,\u001b[39m { force\u001b[33m:\u001b[39m \u001b[36mtrue\u001b[39m })\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m    |\u001b[39m                       \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 75 |\u001b[39m         expect(outputs\u001b[33m.\u001b[39msome(o \u001b[33m=>\u001b[39m o\u001b[33m.\u001b[39mmessage\u001b[33m.\u001b[39mincludes(\u001b[32m'Wrote template'\u001b[39m)))\u001b[33m.\u001b[39mtoBe(\u001b[36mtrue\u001b[39m)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 76 |\u001b[39m       } \u001b[36mfinally\u001b[39m {\u001b[22m\n\u001b[2m     \u001b[90m 77 |\u001b[39m         restore()\u001b[33m;\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.<anonymous> (\u001b[22m\u001b[2m\u001b[0m\u001b[36mtests/unit/cli/config.command.spec.ts\u001b[39m\u001b[0m\u001b[2m:74:23)\u001b[22m\u001b[2m\u001b[22m\n\n\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1mConfigCommand › init 명령어 › force 옵션이 없을 때 확인 메시지를 출력해야 함\u001b[39m\u001b[22m\n\n    TypeError: command.run is not a function\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 83 |\u001b[39m       \u001b[22m\n\u001b[2m     \u001b[90m 84 |\u001b[39m       \u001b[36mtry\u001b[39m {\u001b[22m\n\u001b[2m    \u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 85 |\u001b[39m         \u001b[36mawait\u001b[39m command\u001b[33m.\u001b[39mrun([\u001b[32m'init'\u001b[39m]\u001b[33m,\u001b[39m {})\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m    |\u001b[39m                       \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 86 |\u001b[39m         expect(outputs\u001b[33m.\u001b[39msome(o \u001b[33m=>\u001b[39m o\u001b[33m.\u001b[39mtype \u001b[33m===\u001b[39m \u001b[32m'log'\u001b[39m))\u001b[33m.\u001b[39mtoBe(\u001b[36mtrue\u001b[39m)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 87 |\u001b[39m       } \u001b[36mfinally\u001b[39m {\u001b[22m\n\u001b[2m     \u001b[90m 88 |\u001b[39m         restore()\u001b[33m;\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.<anonymous> (\u001b[22m\u001b[2m\u001b[0m\u001b[36mtests/unit/cli/config.command.spec.ts\u001b[39m\u001b[0m\u001b[2m:85:23)\u001b[22m\u001b[2m\u001b[22m\n\n\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1mConfigCommand › 명령어 옵션 › 알 수 없는 명령어에 대해 적절한 메시지를 출력해야 함\u001b[39m\u001b[22m\n\n    TypeError: command.run is not a function\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 115 |\u001b[39m       \u001b[22m\n\u001b[2m     \u001b[90m 116 |\u001b[39m       \u001b[36mtry\u001b[39m {\u001b[22m\n\u001b[2m    \u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 117 |\u001b[39m         \u001b[36mawait\u001b[39m command\u001b[33m.\u001b[39mrun([\u001b[32m'unknown'\u001b[39m]\u001b[33m,\u001b[39m {})\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m     |\u001b[39m                       \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 118 |\u001b[39m         expect(outputs\u001b[33m.\u001b[39msome(o \u001b[33m=>\u001b[39m o\u001b[33m.\u001b[39mtype \u001b[33m===\u001b[39m \u001b[32m'log'\u001b[39m))\u001b[33m.\u001b[39mtoBe(\u001b[36mtrue\u001b[39m)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 119 |\u001b[39m       } \u001b[36mfinally\u001b[39m {\u001b[22m\n\u001b[2m     \u001b[90m 120 |\u001b[39m         restore()\u001b[33m;\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.<anonymous> (\u001b[22m\u001b[2m\u001b[0m\u001b[36mtests/unit/cli/config.command.spec.ts\u001b[39m\u001b[0m\u001b[2m:117:23)\u001b[22m\u001b[2m\u001b[22m\n","name":"/Users/bernocrest/Desktop/dev/projects/claude-auto-worker/tests/unit/cli/config.command.spec.ts","startTime":1755591225920,"status":"failed","summary":""}],"wasInterrupted":false}
